-- ===================================================
-- Title: JalV2 device include file for PIC16LF1903
--
-- Author: Rob Hamerling, Copyright (c) 2008..2012, all rights reserved.
--
-- Adapted-by:
--
-- Revision: $Revision: 1.1 $
--
-- Compiler: 2.4o
--
-- This file is part of jallib  (http://jallib.googlecode.com)
-- Released under the ZLIB license  (http://www.opensource.org/licenses/zlib-license.html)
--
-- Description:
--    Device include file for pic16lf1903, containing:
--    - Declaration of ports and pins of the chip.
--    - Procedures for shadowing of ports and pins
--      to circumvent the read-modify-write problem.
--    - Symbolic definitions for configuration bits (fuses)
--    - Some device dependent procedures for common
--      operations, like:
--      . enable_digital_io()
--
-- Sources:
--  - x:/mplab886/mplab ide/device/pic16lf1903.dev
--
-- Notes:
--  - Created with Dev2Jal Rexx script version 0.1.37
--  - File creation date/time: 8 Jul 2012 14:23
--
-- ===================================================
--
const word DEVICE_ID   = 0x1C20
const byte PICTYPE[]   = "16LF1903"
const byte DATASHEET[] = "41455B"
const byte PGMSPEC[]   = "41397B"
--
-- Vdd Range: 1.800-3.600 Nominal: 3.300
-- Vpp Range: 8.000-9.000 Default: 9.000
--
-- ---------------------------------------------------
--
include chipdef_jallib                  -- common constants
--
pragma  target  cpu   PIC_14H            -- (banks=32)
pragma  target  chip  16lf1903
pragma  target  bank  0x0080
pragma  target  page  0x0800
pragma  stack   16
pragma  code    4096
pragma  ID      0x8000,4
pragma  data    0x20-0x7E,0xA0-0xEF,0x120-0x16F
pragma  shared  0x7F-0x7F
--
var volatile byte _pic_accum shared at 0x7F      -- (compiler)
--
const word  _FUSES_CT             = 2
const word  _FUSE_BASE[_FUSES_CT] = { 0x8007,
                                      0x8008 }
const word  _FUSES[_FUSES_CT]     = { 0b_0011_1111_1111_1111,         -- CONFIG1
                                      0b_0011_1111_1111_1111 }        -- CONFIG2
--
-- ------------------------------------------------
var volatile byte   INDF0                     shared at 0x0
var volatile byte   _ind                      shared at 0x0
-- ------------------------------------------------
var volatile byte   INDF1                     shared at 0x1
-- ------------------------------------------------
var volatile byte   PCL                       shared at 0x2
var volatile byte   _pcl                      shared at 0x2
-- ------------------------------------------------
var volatile byte   STATUS                    shared at 0x3
var volatile bit    STATUS_NTO                shared at STATUS : 4
var volatile bit    STATUS_NPD                shared at STATUS : 3
var volatile bit    STATUS_Z                  shared at STATUS : 2
var volatile bit    STATUS_DC                 shared at STATUS : 1
var volatile bit    STATUS_C                  shared at STATUS : 0
var volatile byte   _status                   shared at 0x3
const        byte   _not_to                          =  4
const        byte   _not_pd                          =  3
const        byte   _z                               =  2
const        byte   _dc                              =  1
const        byte   _c                               =  0
-- ------------------------------------------------
var volatile word   FSR0                      shared at 0x4
-- ------------------------------------------------
var volatile byte   FSR0L                     shared at 0x4
var volatile byte   _fsr0l                    shared at 0x4
-- ------------------------------------------------
var volatile byte   FSR0H                     shared at 0x5
var volatile byte   _fsr0h                    shared at 0x5
-- ------------------------------------------------
var volatile word   FSR1                      shared at 0x6
-- ------------------------------------------------
var volatile byte   FSR1L                     shared at 0x6
var volatile byte   _fsr1l                    shared at 0x6
-- ------------------------------------------------
var volatile byte   FSR1H                     shared at 0x7
var volatile byte   _fsr1h                    shared at 0x7
-- ------------------------------------------------
var volatile byte   BSR                       shared at 0x8
var volatile bit    BSR_BSR4                  shared at BSR : 4
var volatile bit    BSR_BSR3                  shared at BSR : 3
var volatile bit    BSR_BSR2                  shared at BSR : 2
var volatile bit    BSR_BSR1                  shared at BSR : 1
var volatile bit    BSR_BSR0                  shared at BSR : 0
var volatile byte   _bsr                      shared at 0x8
-- ------------------------------------------------
var volatile byte   WREG                      shared at 0x9
-- ------------------------------------------------
var volatile byte   PCLATH                    shared at 0xA
var volatile bit*7  PCLATH_PCLATH             shared at PCLATH : 0
var volatile byte   _pclath                   shared at 0xA
-- ------------------------------------------------
var volatile byte   INTCON                    shared at 0xB
var volatile bit    INTCON_GIE                shared at INTCON : 7
var volatile bit    INTCON_PEIE               shared at INTCON : 6
var volatile bit    INTCON_TMR0IE             shared at INTCON : 5
var volatile bit    INTCON_INTE               shared at INTCON : 4
var volatile bit    INTCON_IOCIE              shared at INTCON : 3
var volatile bit    INTCON_TMR0IF             shared at INTCON : 2
var volatile bit    INTCON_INTF               shared at INTCON : 1
var volatile bit    INTCON_IOCIF              shared at INTCON : 0
-- ------------------------------------------------
var volatile byte   PORTA                            at 0xC
var volatile bit    PORTA_RA7                        at PORTA : 7
var volatile bit    PORTA_RA6                        at PORTA : 6
var volatile bit    PORTA_RA5                        at PORTA : 5
var volatile bit    PORTA_RA4                        at PORTA : 4
var volatile bit    PORTA_RA3                        at PORTA : 3
var volatile bit    PORTA_RA2                        at PORTA : 2
var volatile bit    PORTA_RA1                        at PORTA : 1
var volatile bit    PORTA_RA0                        at PORTA : 0
-- ------------------------------------------------
var volatile byte   PORTB                            at 0xD
var volatile bit    PORTB_RB7                        at PORTB : 7
var volatile bit    PORTB_RB6                        at PORTB : 6
var volatile bit    PORTB_RB5                        at PORTB : 5
var volatile bit    PORTB_RB4                        at PORTB : 4
var volatile bit    PORTB_RB3                        at PORTB : 3
var volatile bit    PORTB_RB2                        at PORTB : 2
var volatile bit    PORTB_RB1                        at PORTB : 1
var volatile bit    PORTB_RB0                        at PORTB : 0
-- ------------------------------------------------
var volatile byte   PORTC                            at 0xE
var volatile bit    PORTC_RC7                        at PORTC : 7
var volatile bit    PORTC_RC6                        at PORTC : 6
var volatile bit    PORTC_RC5                        at PORTC : 5
var volatile bit    PORTC_RC4                        at PORTC : 4
var volatile bit    PORTC_RC3                        at PORTC : 3
var volatile bit    PORTC_RC2                        at PORTC : 2
var volatile bit    PORTC_RC1                        at PORTC : 1
var volatile bit    PORTC_RC0                        at PORTC : 0
-- ------------------------------------------------
var volatile byte   PORTE                            at 0x10
var volatile bit    PORTE_RE3                        at PORTE : 3
var volatile bit    pin_E3                           at PORTE : 3
alias               pin_MCLR                         is pin_E3
alias               pin_VPP                          is pin_E3
-- ------------------------------------------------
var volatile byte   PIR1                             at 0x11
var volatile bit    PIR1_TMR1GIF                     at PIR1 : 7
var volatile bit    PIR1_ADIF                        at PIR1 : 6
var volatile bit    PIR1_TMR1IF                      at PIR1 : 0
-- ------------------------------------------------
var volatile byte   PIR2                             at 0x12
var volatile bit    PIR2_EEIF                        at PIR2 : 4
var volatile bit    PIR2_LCDIF                       at PIR2 : 2
-- ------------------------------------------------
var volatile byte   TMR0                             at 0x15
-- ------------------------------------------------
var volatile word   TMR1                             at 0x16
-- ------------------------------------------------
var volatile byte   TMR1L                            at 0x16
-- ------------------------------------------------
var volatile byte   TMR1H                            at 0x17
-- ------------------------------------------------
var volatile byte   T1CON                            at 0x18
var volatile bit*2  T1CON_TMR1CS                     at T1CON : 6
var volatile bit*2  T1CON_T1CKPS                     at T1CON : 4
var volatile bit    T1CON_T1OSCEN                    at T1CON : 3
var volatile bit    T1CON_NT1SYNC                    at T1CON : 2
var volatile bit    T1CON_TMR1ON                     at T1CON : 0
-- ------------------------------------------------
var volatile byte   T1GCON                           at 0x19
var volatile bit    T1GCON_TMR1GE                    at T1GCON : 7
var volatile bit    T1GCON_T1GPOL                    at T1GCON : 6
var volatile bit    T1GCON_T1GTM                     at T1GCON : 5
var volatile bit    T1GCON_T1GSPM                    at T1GCON : 4
var volatile bit    T1GCON_T1GGO                     at T1GCON : 3
var volatile bit    T1GCON_NDONE                     at T1GCON : 3
var volatile bit    T1GCON_T1GVAL                    at T1GCON : 2
var volatile bit    T1GCON_T1GSS1                    at T1GCON : 1
var volatile bit    T1GCON_T1GSS0                    at T1GCON : 0
-- ------------------------------------------------
var volatile byte   TRISA                            at 0x8C
alias               PORTA_direction                  is TRISA
--
procedure PORTA_low_direction'put(byte in x) is
   pragma inline
   TRISA = (TRISA & 0xF0) | (x & 0x0F)
end procedure
function PORTA_low_direction'get() return byte is
   pragma inline
   return (TRISA & 0x0F)
end function
--
procedure PORTA_high_direction'put(byte in x) is
   pragma inline
   TRISA = (TRISA & 0x0F) | (x << 4)
end procedure
function PORTA_high_direction'get() return byte is
   pragma inline
   return (TRISA >> 4)
end function
--
var volatile bit    TRISA_TRISA7                     at TRISA : 7
alias               pin_A7_direction                 is TRISA_TRISA7
alias               pin_SEG2_direction               is pin_A7_direction
alias               pin_CLKIN_direction              is pin_A7_direction
--
var volatile bit    TRISA_TRISA6                     at TRISA : 6
alias               pin_A6_direction                 is TRISA_TRISA6
alias               pin_SEG1_direction               is pin_A6_direction
alias               pin_CLKOUT_direction             is pin_A6_direction
--
var volatile bit    TRISA_TRISA5                     at TRISA : 5
alias               pin_A5_direction                 is TRISA_TRISA5
alias               pin_AN4_direction                is pin_A5_direction
alias               pin_SEG5_direction               is pin_A5_direction
--
var volatile bit    TRISA_TRISA4                     at TRISA : 4
alias               pin_A4_direction                 is TRISA_TRISA4
alias               pin_T0CKI_direction              is pin_A4_direction
alias               pin_SEG4_direction               is pin_A4_direction
--
var volatile bit    TRISA_TRISA3                     at TRISA : 3
alias               pin_A3_direction                 is TRISA_TRISA3
alias               pin_AN3_direction                is pin_A3_direction
alias               pin_VREF_POS_direction           is pin_A3_direction
alias               pin_SEG15_direction              is pin_A3_direction
alias               pin_COM3_direction               is pin_A3_direction
--
var volatile bit    TRISA_TRISA2                     at TRISA : 2
alias               pin_A2_direction                 is TRISA_TRISA2
alias               pin_AN2_direction                is pin_A2_direction
alias               pin_COM2_direction               is pin_A2_direction
--
var volatile bit    TRISA_TRISA1                     at TRISA : 1
alias               pin_A1_direction                 is TRISA_TRISA1
alias               pin_AN1_direction                is pin_A1_direction
alias               pin_SEG7_direction               is pin_A1_direction
--
var volatile bit    TRISA_TRISA0                     at TRISA : 0
alias               pin_A0_direction                 is TRISA_TRISA0
alias               pin_AN0_direction                is pin_A0_direction
alias               pin_SEG12_direction              is pin_A0_direction
--
-- ------------------------------------------------
var volatile byte   TRISB                            at 0x8D
alias               PORTB_direction                  is TRISB
--
procedure PORTB_low_direction'put(byte in x) is
   pragma inline
   TRISB = (TRISB & 0xF0) | (x & 0x0F)
end procedure
function PORTB_low_direction'get() return byte is
   pragma inline
   return (TRISB & 0x0F)
end function
--
procedure PORTB_high_direction'put(byte in x) is
   pragma inline
   TRISB = (TRISB & 0x0F) | (x << 4)
end procedure
function PORTB_high_direction'get() return byte is
   pragma inline
   return (TRISB >> 4)
end function
--
var volatile bit    TRISB_TRISB7                     at TRISB : 7
alias               pin_B7_direction                 is TRISB_TRISB7
alias               pin_SEG13_direction              is pin_B7_direction
alias               pin_ICSPDAT_direction            is pin_B7_direction
--
var volatile bit    TRISB_TRISB6                     at TRISB : 6
alias               pin_B6_direction                 is TRISB_TRISB6
alias               pin_SEG14_direction              is pin_B6_direction
alias               pin_ICSPCLK_direction            is pin_B6_direction
--
var volatile bit    TRISB_TRISB5                     at TRISB : 5
alias               pin_B5_direction                 is TRISB_TRISB5
alias               pin_AN13_direction               is pin_B5_direction
alias               pin_COM1_direction               is pin_B5_direction
--
var volatile bit    TRISB_TRISB4                     at TRISB : 4
alias               pin_B4_direction                 is TRISB_TRISB4
alias               pin_AN11_direction               is pin_B4_direction
alias               pin_COM0_direction               is pin_B4_direction
--
var volatile bit    TRISB_TRISB3                     at TRISB : 3
alias               pin_B3_direction                 is TRISB_TRISB3
alias               pin_AN9_direction                is pin_B3_direction
alias               pin_VLCD3_direction              is pin_B3_direction
alias               pin_SEG26_direction              is pin_B3_direction
--
var volatile bit    TRISB_TRISB2                     at TRISB : 2
alias               pin_B2_direction                 is TRISB_TRISB2
alias               pin_AN8_direction                is pin_B2_direction
alias               pin_VLCD2_direction              is pin_B2_direction
alias               pin_SEG25_direction              is pin_B2_direction
--
var volatile bit    TRISB_TRISB1                     at TRISB : 1
alias               pin_B1_direction                 is TRISB_TRISB1
alias               pin_AN10_direction               is pin_B1_direction
alias               pin_VLCD1_direction              is pin_B1_direction
alias               pin_SEG24_direction              is pin_B1_direction
--
var volatile bit    TRISB_TRISB0                     at TRISB : 0
alias               pin_B0_direction                 is TRISB_TRISB0
alias               pin_AN12_direction               is pin_B0_direction
alias               pin_SEG0_direction               is pin_B0_direction
--
-- ------------------------------------------------
var volatile byte   TRISC                            at 0x8E
alias               PORTC_direction                  is TRISC
--
procedure PORTC_low_direction'put(byte in x) is
   pragma inline
   TRISC = (TRISC & 0xF0) | (x & 0x0F)
end procedure
function PORTC_low_direction'get() return byte is
   pragma inline
   return (TRISC & 0x0F)
end function
--
procedure PORTC_high_direction'put(byte in x) is
   pragma inline
   TRISC = (TRISC & 0x0F) | (x << 4)
end procedure
function PORTC_high_direction'get() return byte is
   pragma inline
   return (TRISC >> 4)
end function
--
var volatile bit    TRISC_TRISC7                     at TRISC : 7
alias               pin_C7_direction                 is TRISC_TRISC7
alias               pin_SEG8_direction               is pin_C7_direction
--
var volatile bit    TRISC_TRISC6                     at TRISC : 6
alias               pin_C6_direction                 is TRISC_TRISC6
alias               pin_SEG9_direction               is pin_C6_direction
--
var volatile bit    TRISC_TRISC5                     at TRISC : 5
alias               pin_C5_direction                 is TRISC_TRISC5
alias               pin_SEG10_direction              is pin_C5_direction
--
var volatile bit    TRISC_TRISC4                     at TRISC : 4
alias               pin_C4_direction                 is TRISC_TRISC4
alias               pin_T1G_direction                is pin_C4_direction
alias               pin_SEG11_direction              is pin_C4_direction
--
var volatile bit    TRISC_TRISC3                     at TRISC : 3
alias               pin_C3_direction                 is TRISC_TRISC3
alias               pin_SEG6_direction               is pin_C3_direction
--
var volatile bit    TRISC_TRISC2                     at TRISC : 2
alias               pin_C2_direction                 is TRISC_TRISC2
alias               pin_SEG3_direction               is pin_C2_direction
--
var volatile bit    TRISC_TRISC1                     at TRISC : 1
alias               pin_C1_direction                 is TRISC_TRISC1
alias               pin_T1OSI_direction              is pin_C1_direction
--
var volatile bit    TRISC_TRISC0                     at TRISC : 0
alias               pin_C0_direction                 is TRISC_TRISC0
alias               pin_T1OSO_direction              is pin_C0_direction
alias               pin_T1CKI_direction              is pin_C0_direction
--
-- ------------------------------------------------
var volatile byte   TRISE                            at 0x90
alias               PORTE_direction                  is TRISE
--
procedure PORTE_low_direction'put(byte in x) is
   pragma inline
   TRISE = (TRISE & 0xF0) | (x & 0x0F)
end procedure
function PORTE_low_direction'get() return byte is
   pragma inline
   return (TRISE & 0x0F)
end function
--
procedure PORTE_high_direction'put(byte in x) is
   pragma inline
   TRISE = (TRISE & 0x0F) | (x << 4)
end procedure
function PORTE_high_direction'get() return byte is
   pragma inline
   return (TRISE >> 4)
end function
--
-- ------------------------------------------------
var volatile byte   PIE1                             at 0x91
var volatile bit    PIE1_TMR1GIE                     at PIE1 : 7
var volatile bit    PIE1_ADIE                        at PIE1 : 6
var volatile bit    PIE1_TMR1IE                      at PIE1 : 0
-- ------------------------------------------------
var volatile byte   PIE2                             at 0x92
var volatile bit    PIE2_EEIE                        at PIE2 : 4
var volatile bit    PIE2_LCDIE                       at PIE2 : 2
-- ------------------------------------------------
var volatile byte   OPTION_REG                       at 0x95
var volatile bit    OPTION_REG_NWPUEN                at OPTION_REG : 7
var volatile bit    OPTION_REG_INTEDG                at OPTION_REG : 6
var volatile bit    OPTION_REG_TMR0CS                at OPTION_REG : 5
alias               T0CON_T0CS                       is OPTION_REG_TMR0CS
var volatile bit    OPTION_REG_TMR0SE                at OPTION_REG : 4
alias               T0CON_T0SE                       is OPTION_REG_TMR0SE
var volatile bit    OPTION_REG_PSA                   at OPTION_REG : 3
alias               T0CON_PSA                        is OPTION_REG_PSA
var volatile bit*3  OPTION_REG_PS                    at OPTION_REG : 0
alias               T0CON_T0PS                       is OPTION_REG_PS
-- ------------------------------------------------
var volatile byte   PCON                             at 0x96
var volatile bit    PCON_STKOVF                      at PCON : 7
var volatile bit    PCON_STKUNF                      at PCON : 6
var volatile bit    PCON_NRWDT                       at PCON : 4
var volatile bit    PCON_NRMCLR                      at PCON : 3
var volatile bit    PCON_NRI                         at PCON : 2
var volatile bit    PCON_NPOR                        at PCON : 1
var volatile bit    PCON_NBOR                        at PCON : 0
-- ------------------------------------------------
var volatile byte   WDTCON                           at 0x97
var volatile bit*5  WDTCON_WDTPS                     at WDTCON : 1
var volatile bit    WDTCON_SWDTEN                    at WDTCON : 0
-- ------------------------------------------------
var volatile byte   OSCCON                           at 0x99
var volatile bit*4  OSCCON_IRCF                      at OSCCON : 3
var volatile bit*2  OSCCON_SCS                       at OSCCON : 0
-- ------------------------------------------------
var volatile byte   OSCSTAT                          at 0x9A
var volatile bit    OSCSTAT_T1OSCR                   at OSCSTAT : 7
var volatile bit    OSCSTAT_OSTS                     at OSCSTAT : 5
var volatile bit    OSCSTAT_HFIOFR                   at OSCSTAT : 4
var volatile bit    OSCSTAT_LFIOFR                   at OSCSTAT : 1
var volatile bit    OSCSTAT_HFIOFS                   at OSCSTAT : 0
-- ------------------------------------------------
var volatile word   ADRES                            at 0x9B
-- ------------------------------------------------
var volatile byte   ADRESL                           at 0x9B
-- ------------------------------------------------
var volatile byte   ADRESH                           at 0x9C
-- ------------------------------------------------
var volatile byte   ADCON0                           at 0x9D
var volatile bit*5  ADCON0_CHS                       at ADCON0 : 2
var volatile bit    ADCON0_GO                        at ADCON0 : 1
var volatile bit    ADCON0_NDONE                     at ADCON0 : 1
var volatile bit    ADCON0_ADON                      at ADCON0 : 0
-- ------------------------------------------------
var volatile byte   ADCON1                           at 0x9E
var volatile bit    ADCON1_ADFM                      at ADCON1 : 7
var volatile bit*3  ADCON1_ADCS                      at ADCON1 : 4
var volatile bit    ADCON1_ADPREF1                   at ADCON1 : 1
var volatile bit    ADCON1_ADPREF0                   at ADCON1 : 0
-- ------------------------------------------------
var volatile byte   LATA                             at 0x10C
--
procedure PORTA'put(byte in x at LATA) is
   pragma inline
end procedure
--
procedure PORTA_low'put(byte in x) is
   pragma inline
   LATA = (LATA & 0xF0) | (x & 0x0F)
end procedure
function PORTA_low'get() return byte is
   pragma inline
   return (PORTA & 0x0F)
end function
--
procedure PORTA_high'put(byte in x) is
   pragma inline
   LATA = (LATA & 0x0F) | (x << 4)
end procedure
function PORTA_high'get() return byte is
   pragma inline
   return (PORTA >> 4)
end function
--
var volatile bit    LATA_LATA7                       at LATA : 7
var volatile bit    pin_A7                           at PORTA : 7
alias               pin_SEG2                         is pin_A7
alias               pin_CLKIN                        is pin_A7
--
procedure pin_A7'put(bit in x at LATA : 7) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA6                       at LATA : 6
var volatile bit    pin_A6                           at PORTA : 6
alias               pin_SEG1                         is pin_A6
alias               pin_CLKOUT                       is pin_A6
--
procedure pin_A6'put(bit in x at LATA : 6) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA5                       at LATA : 5
var volatile bit    pin_A5                           at PORTA : 5
alias               pin_AN4                          is pin_A5
alias               pin_SEG5                         is pin_A5
--
procedure pin_A5'put(bit in x at LATA : 5) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA4                       at LATA : 4
var volatile bit    pin_A4                           at PORTA : 4
alias               pin_T0CKI                        is pin_A4
alias               pin_SEG4                         is pin_A4
--
procedure pin_A4'put(bit in x at LATA : 4) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA3                       at LATA : 3
var volatile bit    pin_A3                           at PORTA : 3
alias               pin_AN3                          is pin_A3
alias               pin_VREF_POS                     is pin_A3
alias               pin_SEG15                        is pin_A3
alias               pin_COM3                         is pin_A3
--
procedure pin_A3'put(bit in x at LATA : 3) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA2                       at LATA : 2
var volatile bit    pin_A2                           at PORTA : 2
alias               pin_AN2                          is pin_A2
alias               pin_COM2                         is pin_A2
--
procedure pin_A2'put(bit in x at LATA : 2) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA1                       at LATA : 1
var volatile bit    pin_A1                           at PORTA : 1
alias               pin_AN1                          is pin_A1
alias               pin_SEG7                         is pin_A1
--
procedure pin_A1'put(bit in x at LATA : 1) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA0                       at LATA : 0
var volatile bit    pin_A0                           at PORTA : 0
alias               pin_AN0                          is pin_A0
alias               pin_SEG12                        is pin_A0
--
procedure pin_A0'put(bit in x at LATA : 0) is
   pragma inline
end procedure
--
-- ------------------------------------------------
var volatile byte   LATB                             at 0x10D
--
procedure PORTB'put(byte in x at LATB) is
   pragma inline
end procedure
--
procedure PORTB_low'put(byte in x) is
   pragma inline
   LATB = (LATB & 0xF0) | (x & 0x0F)
end procedure
function PORTB_low'get() return byte is
   pragma inline
   return (PORTB & 0x0F)
end function
--
procedure PORTB_high'put(byte in x) is
   pragma inline
   LATB = (LATB & 0x0F) | (x << 4)
end procedure
function PORTB_high'get() return byte is
   pragma inline
   return (PORTB >> 4)
end function
--
var volatile bit    LATB_LATB7                       at LATB : 7
var volatile bit    pin_B7                           at PORTB : 7
alias               pin_SEG13                        is pin_B7
alias               pin_ICSPDAT                      is pin_B7
--
procedure pin_B7'put(bit in x at LATB : 7) is
   pragma inline
end procedure
--
var volatile bit    LATB_LATB6                       at LATB : 6
var volatile bit    pin_B6                           at PORTB : 6
alias               pin_SEG14                        is pin_B6
alias               pin_ICSPCLK                      is pin_B6
--
procedure pin_B6'put(bit in x at LATB : 6) is
   pragma inline
end procedure
--
var volatile bit    LATB_LATB5                       at LATB : 5
var volatile bit    pin_B5                           at PORTB : 5
alias               pin_AN13                         is pin_B5
alias               pin_COM1                         is pin_B5
--
procedure pin_B5'put(bit in x at LATB : 5) is
   pragma inline
end procedure
--
var volatile bit    LATB_LATB4                       at LATB : 4
var volatile bit    pin_B4                           at PORTB : 4
alias               pin_AN11                         is pin_B4
alias               pin_COM0                         is pin_B4
--
procedure pin_B4'put(bit in x at LATB : 4) is
   pragma inline
end procedure
--
var volatile bit    LATB_LATB3                       at LATB : 3
var volatile bit    pin_B3                           at PORTB : 3
alias               pin_AN9                          is pin_B3
alias               pin_VLCD3                        is pin_B3
alias               pin_SEG26                        is pin_B3
--
procedure pin_B3'put(bit in x at LATB : 3) is
   pragma inline
end procedure
--
var volatile bit    LATB_LATB2                       at LATB : 2
var volatile bit    pin_B2                           at PORTB : 2
alias               pin_AN8                          is pin_B2
alias               pin_VLCD2                        is pin_B2
alias               pin_SEG25                        is pin_B2
--
procedure pin_B2'put(bit in x at LATB : 2) is
   pragma inline
end procedure
--
var volatile bit    LATB_LATB1                       at LATB : 1
var volatile bit    pin_B1                           at PORTB : 1
alias               pin_AN10                         is pin_B1
alias               pin_VLCD1                        is pin_B1
alias               pin_SEG24                        is pin_B1
--
procedure pin_B1'put(bit in x at LATB : 1) is
   pragma inline
end procedure
--
var volatile bit    LATB_LATB0                       at LATB : 0
var volatile bit    pin_B0                           at PORTB : 0
alias               pin_AN12                         is pin_B0
alias               pin_SEG0                         is pin_B0
--
procedure pin_B0'put(bit in x at LATB : 0) is
   pragma inline
end procedure
--
-- ------------------------------------------------
var volatile byte   LATC                             at 0x10E
--
procedure PORTC'put(byte in x at LATC) is
   pragma inline
end procedure
--
procedure PORTC_low'put(byte in x) is
   pragma inline
   LATC = (LATC & 0xF0) | (x & 0x0F)
end procedure
function PORTC_low'get() return byte is
   pragma inline
   return (PORTC & 0x0F)
end function
--
procedure PORTC_high'put(byte in x) is
   pragma inline
   LATC = (LATC & 0x0F) | (x << 4)
end procedure
function PORTC_high'get() return byte is
   pragma inline
   return (PORTC >> 4)
end function
--
var volatile bit    LATC_LATC7                       at LATC : 7
var volatile bit    pin_C7                           at PORTC : 7
alias               pin_SEG8                         is pin_C7
--
procedure pin_C7'put(bit in x at LATC : 7) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC6                       at LATC : 6
var volatile bit    pin_C6                           at PORTC : 6
alias               pin_SEG9                         is pin_C6
--
procedure pin_C6'put(bit in x at LATC : 6) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC5                       at LATC : 5
var volatile bit    pin_C5                           at PORTC : 5
alias               pin_SEG10                        is pin_C5
--
procedure pin_C5'put(bit in x at LATC : 5) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC4                       at LATC : 4
var volatile bit    pin_C4                           at PORTC : 4
alias               pin_T1G                          is pin_C4
alias               pin_SEG11                        is pin_C4
--
procedure pin_C4'put(bit in x at LATC : 4) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC3                       at LATC : 3
var volatile bit    pin_C3                           at PORTC : 3
alias               pin_SEG6                         is pin_C3
--
procedure pin_C3'put(bit in x at LATC : 3) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC2                       at LATC : 2
var volatile bit    pin_C2                           at PORTC : 2
alias               pin_SEG3                         is pin_C2
--
procedure pin_C2'put(bit in x at LATC : 2) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC1                       at LATC : 1
var volatile bit    pin_C1                           at PORTC : 1
alias               pin_T1OSI                        is pin_C1
--
procedure pin_C1'put(bit in x at LATC : 1) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC0                       at LATC : 0
var volatile bit    pin_C0                           at PORTC : 0
alias               pin_T1OSO                        is pin_C0
alias               pin_T1CKI                        is pin_C0
--
procedure pin_C0'put(bit in x at LATC : 0) is
   pragma inline
end procedure
--
-- ------------------------------------------------
var volatile byte   BORCON                           at 0x116
var volatile bit    BORCON_SBOREN                    at BORCON : 7
var volatile bit    BORCON_BORFS                     at BORCON : 6
var volatile bit    BORCON_BORRDY                    at BORCON : 0
-- ------------------------------------------------
var volatile byte   FVRCON                           at 0x117
var volatile bit    FVRCON_FVREN                     at FVRCON : 7
var volatile bit    FVRCON_FVRRDY                    at FVRCON : 6
var volatile bit    FVRCON_TSEN                      at FVRCON : 5
var volatile bit    FVRCON_TSRNG                     at FVRCON : 4
var volatile bit    FVRCON_ADFVR1                    at FVRCON : 1
var volatile bit    FVRCON_ADFVR0                    at FVRCON : 0
-- ------------------------------------------------
var volatile byte   ANSELA                           at 0x18C
var volatile bit    ANSELA_ANSA5                     at ANSELA : 5
alias               JANSEL_ANS4                      is ANSELA_ANSA5
var volatile bit    ANSELA_ANSA3                     at ANSELA : 3
alias               JANSEL_ANS3                      is ANSELA_ANSA3
var volatile bit    ANSELA_ANSA2                     at ANSELA : 2
alias               JANSEL_ANS2                      is ANSELA_ANSA2
var volatile bit    ANSELA_ANSA1                     at ANSELA : 1
alias               JANSEL_ANS1                      is ANSELA_ANSA1
var volatile bit    ANSELA_ANSA0                     at ANSELA : 0
alias               JANSEL_ANS0                      is ANSELA_ANSA0
-- ------------------------------------------------
var volatile byte   ANSELB                           at 0x18D
var volatile bit    ANSELB_ANSB5                     at ANSELB : 5
alias               JANSEL_ANS13                     is ANSELB_ANSB5
var volatile bit    ANSELB_ANSB4                     at ANSELB : 4
alias               JANSEL_ANS11                     is ANSELB_ANSB4
var volatile bit    ANSELB_ANSB3                     at ANSELB : 3
alias               JANSEL_ANS9                      is ANSELB_ANSB3
var volatile bit    ANSELB_ANSB2                     at ANSELB : 2
alias               JANSEL_ANS8                      is ANSELB_ANSB2
var volatile bit    ANSELB_ANSB1                     at ANSELB : 1
alias               JANSEL_ANS10                     is ANSELB_ANSB1
var volatile bit    ANSELB_ANSB0                     at ANSELB : 0
alias               JANSEL_ANS12                     is ANSELB_ANSB0
-- ------------------------------------------------
var volatile word   PMADR                            at 0x191
-- ------------------------------------------------
var volatile byte   PMADRL                           at 0x191
-- ------------------------------------------------
var volatile byte   PMADRH                           at 0x192
var volatile bit*7  PMADRH_PMADRH                    at PMADRH : 0
-- ------------------------------------------------
var volatile word   PMDAT                            at 0x193
-- ------------------------------------------------
var volatile byte   PMDATL                           at 0x193
-- ------------------------------------------------
var volatile byte   PMDATH                           at 0x194
var volatile bit*6  PMDATH_PMDATH                    at PMDATH : 0
-- ------------------------------------------------
var volatile byte   PMCON1                           at 0x195
var volatile bit    PMCON1_CFGS                      at PMCON1 : 6
var volatile bit    PMCON1_LWLO                      at PMCON1 : 5
var volatile bit    PMCON1_FREE                      at PMCON1 : 4
var volatile bit    PMCON1_WRERR                     at PMCON1 : 3
var volatile bit    PMCON1_WREN                      at PMCON1 : 2
var volatile bit    PMCON1_WR                        at PMCON1 : 1
var volatile bit    PMCON1_RD                        at PMCON1 : 0
-- ------------------------------------------------
var volatile byte   PMCON2                           at 0x196
-- ------------------------------------------------
var volatile byte   WPUB                             at 0x20D
var volatile bit    WPUB_WPUB7                       at WPUB : 7
var volatile bit    WPUB_WPUB6                       at WPUB : 6
var volatile bit    WPUB_WPUB5                       at WPUB : 5
var volatile bit    WPUB_WPUB4                       at WPUB : 4
var volatile bit    WPUB_WPUB3                       at WPUB : 3
var volatile bit    WPUB_WPUB2                       at WPUB : 2
var volatile bit    WPUB_WPUB1                       at WPUB : 1
var volatile bit    WPUB_WPUB0                       at WPUB : 0
-- ------------------------------------------------
var volatile byte   WPUE                             at 0x210
var volatile bit    WPUE_WPUE3                       at WPUE : 3
-- ------------------------------------------------
var volatile byte   IOCBP                            at 0x394
var volatile bit    IOCBP_IOCBP7                     at IOCBP : 7
var volatile bit    IOCBP_IOCBP6                     at IOCBP : 6
var volatile bit    IOCBP_IOCBP5                     at IOCBP : 5
var volatile bit    IOCBP_IOCBP4                     at IOCBP : 4
var volatile bit    IOCBP_IOCBP3                     at IOCBP : 3
var volatile bit    IOCBP_IOCBP2                     at IOCBP : 2
var volatile bit    IOCBP_IOCBP1                     at IOCBP : 1
var volatile bit    IOCBP_IOCBP0                     at IOCBP : 0
-- ------------------------------------------------
var volatile byte   IOCBN                            at 0x395
var volatile bit    IOCBN_IOCBN7                     at IOCBN : 7
var volatile bit    IOCBN_IOCBN6                     at IOCBN : 6
var volatile bit    IOCBN_IOCBN5                     at IOCBN : 5
var volatile bit    IOCBN_IOCBN4                     at IOCBN : 4
var volatile bit    IOCBN_IOCBN3                     at IOCBN : 3
var volatile bit    IOCBN_IOCBN2                     at IOCBN : 2
var volatile bit    IOCBN_IOCBN1                     at IOCBN : 1
var volatile bit    IOCBN_IOCBN0                     at IOCBN : 0
-- ------------------------------------------------
var volatile byte   IOCBF                            at 0x396
var volatile bit    IOCBF_IOCBF7                     at IOCBF : 7
var volatile bit    IOCBF_IOCBF6                     at IOCBF : 6
var volatile bit    IOCBF_IOCBF5                     at IOCBF : 5
var volatile bit    IOCBF_IOCBF4                     at IOCBF : 4
var volatile bit    IOCBF_IOCBF3                     at IOCBF : 3
var volatile bit    IOCBF_IOCBF2                     at IOCBF : 2
var volatile bit    IOCBF_IOCBF1                     at IOCBF : 1
var volatile bit    IOCBF_IOCBF0                     at IOCBF : 0
-- ------------------------------------------------
var volatile byte   LCDCON                           at 0x791
var volatile bit    LCDCON_LCDEN                     at LCDCON : 7
var volatile bit    LCDCON_SLPEN                     at LCDCON : 6
var volatile bit    LCDCON_WERR                      at LCDCON : 5
var volatile bit    LCDCON_CS1                       at LCDCON : 3
var volatile bit    LCDCON_CS0                       at LCDCON : 2
var volatile bit    LCDCON_LMUX1                     at LCDCON : 1
var volatile bit    LCDCON_LMUX0                     at LCDCON : 0
-- ------------------------------------------------
var volatile byte   LCDPS                            at 0x792
var volatile bit    LCDPS_WFT                        at LCDPS : 7
var volatile bit    LCDPS_BIASMD                     at LCDPS : 6
var volatile bit    LCDPS_LCDA                       at LCDPS : 5
var volatile bit    LCDPS_WA                         at LCDPS : 4
var volatile bit    LCDPS_LP3                        at LCDPS : 3
var volatile bit    LCDPS_LP2                        at LCDPS : 2
var volatile bit    LCDPS_LP1                        at LCDPS : 1
var volatile bit    LCDPS_LP0                        at LCDPS : 0
-- ------------------------------------------------
var volatile byte   LCDREF                           at 0x793
var volatile bit    LCDREF_LCDIRE                    at LCDREF : 7
var volatile bit    LCDREF_LCDIRI                    at LCDREF : 5
var volatile bit    LCDREF_VLCD3PE                   at LCDREF : 3
var volatile bit    LCDREF_VLCD2PE                   at LCDREF : 2
var volatile bit    LCDREF_VLCD1PE                   at LCDREF : 1
-- ------------------------------------------------
var volatile byte   LCDCST                           at 0x794
var volatile bit    LCDCST_LCDCST2                   at LCDCST : 2
var volatile bit    LCDCST_LCDCST1                   at LCDCST : 1
var volatile bit    LCDCST_LCDCST0                   at LCDCST : 0
-- ------------------------------------------------
var volatile byte   LCDRL                            at 0x795
var volatile bit    LCDRL_LRLAP1                     at LCDRL : 7
var volatile bit    LCDRL_LRLAP0                     at LCDRL : 6
var volatile bit    LCDRL_LRLBP1                     at LCDRL : 5
var volatile bit    LCDRL_LRLBP0                     at LCDRL : 4
var volatile bit    LCDRL_LRLAT2                     at LCDRL : 2
var volatile bit    LCDRL_LRLAT1                     at LCDRL : 1
var volatile bit    LCDRL_LRLAT0                     at LCDRL : 0
-- ------------------------------------------------
var volatile byte   LCDSE0                           at 0x798
var volatile bit    LCDSE0_SEG7                      at LCDSE0 : 7
var volatile bit    LCDSE0_SEG6                      at LCDSE0 : 6
var volatile bit    LCDSE0_SEG5                      at LCDSE0 : 5
var volatile bit    LCDSE0_SEG4                      at LCDSE0 : 4
var volatile bit    LCDSE0_SEG3                      at LCDSE0 : 3
var volatile bit    LCDSE0_SEG2                      at LCDSE0 : 2
var volatile bit    LCDSE0_SEG1                      at LCDSE0 : 1
var volatile bit    LCDSE0_SEG0                      at LCDSE0 : 0
-- ------------------------------------------------
var volatile byte   LCDSE1                           at 0x799
var volatile bit    LCDSE1_SEG15                     at LCDSE1 : 7
var volatile bit    LCDSE1_SEG14                     at LCDSE1 : 6
var volatile bit    LCDSE1_SEG13                     at LCDSE1 : 5
var volatile bit    LCDSE1_SEG12                     at LCDSE1 : 4
var volatile bit    LCDSE1_SEG11                     at LCDSE1 : 3
var volatile bit    LCDSE1_SEG10                     at LCDSE1 : 2
var volatile bit    LCDSE1_SEG9                      at LCDSE1 : 1
var volatile bit    LCDSE1_SEG8                      at LCDSE1 : 0
-- ------------------------------------------------
var volatile byte   LCDDATA0                         at 0x7A0
var volatile bit    LCDDATA0_SEG7COM0                at LCDDATA0 : 7
var volatile bit    LCDDATA0_SEG6COM0                at LCDDATA0 : 6
var volatile bit    LCDDATA0_SEG5COM0                at LCDDATA0 : 5
var volatile bit    LCDDATA0_SEG4COM0                at LCDDATA0 : 4
var volatile bit    LCDDATA0_SEG3COM0                at LCDDATA0 : 3
var volatile bit    LCDDATA0_SEG2COM0                at LCDDATA0 : 2
var volatile bit    LCDDATA0_SEG1COM0                at LCDDATA0 : 1
var volatile bit    LCDDATA0_SEG0COM0                at LCDDATA0 : 0
-- ------------------------------------------------
var volatile byte   LCDDATA1                         at 0x7A1
var volatile bit    LCDDATA1_SEG15COM0               at LCDDATA1 : 7
var volatile bit    LCDDATA1_SEG14COM0               at LCDDATA1 : 6
var volatile bit    LCDDATA1_SEG13COM0               at LCDDATA1 : 5
var volatile bit    LCDDATA1_SEG12COM0               at LCDDATA1 : 4
var volatile bit    LCDDATA1_SEG11COM0               at LCDDATA1 : 3
var volatile bit    LCDDATA1_SEG10COM0               at LCDDATA1 : 2
var volatile bit    LCDDATA1_SEG9COM0                at LCDDATA1 : 1
var volatile bit    LCDDATA1_SEG8COM0                at LCDDATA1 : 0
-- ------------------------------------------------
var volatile byte   LCDDATA3                         at 0x7A3
var volatile bit    LCDDATA3_SEG7COM1                at LCDDATA3 : 7
var volatile bit    LCDDATA3_SEG6COM1                at LCDDATA3 : 6
var volatile bit    LCDDATA3_SEG5COM1                at LCDDATA3 : 5
var volatile bit    LCDDATA3_SEG4COM1                at LCDDATA3 : 4
var volatile bit    LCDDATA3_SEG3COM1                at LCDDATA3 : 3
var volatile bit    LCDDATA3_SEG2COM1                at LCDDATA3 : 2
var volatile bit    LCDDATA3_SEG1COM1                at LCDDATA3 : 1
var volatile bit    LCDDATA3_SEG0COM1                at LCDDATA3 : 0
-- ------------------------------------------------
var volatile byte   LCDDATA4                         at 0x7A4
var volatile bit    LCDDATA4_SEG15COM1               at LCDDATA4 : 7
var volatile bit    LCDDATA4_SEG14COM1               at LCDDATA4 : 6
var volatile bit    LCDDATA4_SEG13COM1               at LCDDATA4 : 5
var volatile bit    LCDDATA4_SEG12COM1               at LCDDATA4 : 4
var volatile bit    LCDDATA4_SEG11COM1               at LCDDATA4 : 3
var volatile bit    LCDDATA4_SEG10COM1               at LCDDATA4 : 2
var volatile bit    LCDDATA4_SEG9COM1                at LCDDATA4 : 1
var volatile bit    LCDDATA4_SEG8COM1                at LCDDATA4 : 0
-- ------------------------------------------------
var volatile byte   LCDDATA6                         at 0x7A6
var volatile bit    LCDDATA6_SEG7COM2                at LCDDATA6 : 7
var volatile bit    LCDDATA6_SEG6COM2                at LCDDATA6 : 6
var volatile bit    LCDDATA6_SEG5COM2                at LCDDATA6 : 5
var volatile bit    LCDDATA6_SEG4COM2                at LCDDATA6 : 4
var volatile bit    LCDDATA6_SEG3COM2                at LCDDATA6 : 3
var volatile bit    LCDDATA6_SEG2COM2                at LCDDATA6 : 2
var volatile bit    LCDDATA6_SEG1COM2                at LCDDATA6 : 1
var volatile bit    LCDDATA6_SEG0COM2                at LCDDATA6 : 0
-- ------------------------------------------------
var volatile byte   LCDDATA7                         at 0x7A7
var volatile bit    LCDDATA7_SEG15COM2               at LCDDATA7 : 7
var volatile bit    LCDDATA7_SEG14COM2               at LCDDATA7 : 6
var volatile bit    LCDDATA7_SEG13COM2               at LCDDATA7 : 5
var volatile bit    LCDDATA7_SEG12COM2               at LCDDATA7 : 4
var volatile bit    LCDDATA7_SEG11COM2               at LCDDATA7 : 3
var volatile bit    LCDDATA7_SEG10COM2               at LCDDATA7 : 2
var volatile bit    LCDDATA7_SEG9COM2                at LCDDATA7 : 1
var volatile bit    LCDDATA7_SEG8COM2                at LCDDATA7 : 0
-- ------------------------------------------------
var volatile byte   LCDDATA9                         at 0x7A9
var volatile bit    LCDDATA9_SEG7COM3                at LCDDATA9 : 7
var volatile bit    LCDDATA9_SEG6COM3                at LCDDATA9 : 6
var volatile bit    LCDDATA9_SEG5COM3                at LCDDATA9 : 5
var volatile bit    LCDDATA9_SEG4COM3                at LCDDATA9 : 4
var volatile bit    LCDDATA9_SEG3COM3                at LCDDATA9 : 3
var volatile bit    LCDDATA9_SEG2COM3                at LCDDATA9 : 2
var volatile bit    LCDDATA9_SEG1COM3                at LCDDATA9 : 1
var volatile bit    LCDDATA9_SEG0COM3                at LCDDATA9 : 0
-- ------------------------------------------------
var volatile byte   LCDDATA10                        at 0x7AA
var volatile bit    LCDDATA10_SEG15COM3              at LCDDATA10 : 7
var volatile bit    LCDDATA10_SEG14COM3              at LCDDATA10 : 6
var volatile bit    LCDDATA10_SEG13COM3              at LCDDATA10 : 5
var volatile bit    LCDDATA10_SEG12COM3              at LCDDATA10 : 4
var volatile bit    LCDDATA10_SEG11COM3              at LCDDATA10 : 3
var volatile bit    LCDDATA10_SEG10COM3              at LCDDATA10 : 2
var volatile bit    LCDDATA10_SEG9COM3               at LCDDATA10 : 1
var volatile bit    LCDDATA10_SEG8COM3               at LCDDATA10 : 0
-- ------------------------------------------------
var volatile byte   LCDDATA12                        at 0x7AC
var volatile bit    LCDDATA12_SEG26COM0              at LCDDATA12 : 2
var volatile bit    LCDDATA12_SEG25COM0              at LCDDATA12 : 1
var volatile bit    LCDDATA12_SEG24COM0              at LCDDATA12 : 0
-- ------------------------------------------------
var volatile byte   LCDDATA15                        at 0x7AF
var volatile bit    LCDDATA15_SEG26COM1              at LCDDATA15 : 2
var volatile bit    LCDDATA15_SEG25COM1              at LCDDATA15 : 1
var volatile bit    LCDDATA15_SEG24COM1              at LCDDATA15 : 0
-- ------------------------------------------------
var volatile byte   LCDDATA18                        at 0x7B2
var volatile bit    LCDDATA18_SEG26COM2              at LCDDATA18 : 2
var volatile bit    LCDDATA18_SEG25COM2              at LCDDATA18 : 1
var volatile bit    LCDDATA18_SEG24COM2              at LCDDATA18 : 0
-- ------------------------------------------------
var volatile byte   LCDDATA21                        at 0x7B5
var volatile bit    LCDDATA21_SEG26COM3              at LCDDATA21 : 2
var volatile bit    LCDDATA21_SEG25COM3              at LCDDATA21 : 1
var volatile bit    LCDDATA21_SEG24COM3              at LCDDATA21 : 0
-- ------------------------------------------------
var volatile byte   STATUS_SHAD                      at 0xFE4
var volatile bit    STATUS_SHAD_Z                    at STATUS_SHAD : 2
var volatile bit    STATUS_SHAD_DC                   at STATUS_SHAD : 1
var volatile bit    STATUS_SHAD_C                    at STATUS_SHAD : 0
-- ------------------------------------------------
var volatile byte   WREG_SHAD                        at 0xFE5
-- ------------------------------------------------
var volatile byte   BSR_SHAD                         at 0xFE6
var volatile bit*5  BSR_SHAD_BSR_SHAD                at BSR_SHAD : 0
-- ------------------------------------------------
var volatile byte   PCLATH_SHAD                      at 0xFE7
var volatile bit*7  PCLATH_SHAD_PCLATH_SHAD          at PCLATH_SHAD : 0
-- ------------------------------------------------
var volatile byte   FSR0L_SHAD                       at 0xFE8
-- ------------------------------------------------
var volatile byte   FSR0H_SHAD                       at 0xFE9
-- ------------------------------------------------
var volatile byte   FSR1L_SHAD                       at 0xFEA
-- ------------------------------------------------
var volatile byte   FSR1H_SHAD                       at 0xFEB
-- ------------------------------------------------
var volatile byte   STKPTR                           at 0xFED
var volatile bit*5  STKPTR_STKPTR                    at STKPTR : 0
-- ------------------------------------------------
var volatile byte   TOSL                             at 0xFEE
-- ------------------------------------------------
var volatile byte   TOSH                             at 0xFEF
var volatile bit*7  TOSH_TOSH                        at TOSH : 0
--
-- ===================================================
--
-- Special (device specific) constants and procedures
--
const ADC_GROUP = ADC_V0
const byte ADC_NTOTAL_CHANNEL = 11
const byte ADC_ADCS_BITCOUNT  = 3
--
const PPS_GROUP  = PPS_0        -- no Peripheral Pin Selection
--
-- - - - - - - - - - - - - - - - - - - - - - - - - - -
-- Change analog I/O pins into digital I/O pins.
procedure analog_off() is
   pragma inline
   ANSELA = 0b0000_0000        -- digital I/O
   ANSELB = 0b0000_0000        -- digital I/O
end procedure
--
-- - - - - - - - - - - - - - - - - - - - - - - - - - -
-- Disable ADC module
procedure adc_off() is
   pragma inline
   ADCON0 = 0b0000_0000         -- disable ADC
   ADCON1 = 0b0000_0000
end procedure
--
-- - - - - - - - - - - - - - - - - - - - - - - - - - -
-- Switch analog ports to digital mode (if analog module present).
procedure enable_digital_io() is
   pragma inline
   analog_off()
   adc_off()
end procedure
--
-- ==================================================
--
-- Symbolic Fuse definitions
-- -------------------------
--
-- CONFIG1 (0x8007)
--
pragma fuse_def OSC:0 0x3 {                -- oscillator selection
       ECH_NOCLKOUT = 0x7                  -- ech, external clock, high power mode (4-32 mhz): device clock supplied to clkin pin
       ECM_NOCLKOUT = 0x6                  -- ecm, external clock, medium power mode (0.5-4 mhz): device clock supplied to clkin pin
       ECL_NOCLKOUT = 0x5                  -- ecl, external clock, low power mode (0-0.5 mhz): device clock supplied to clkin pin
       INTOSC_NOCLKOUT = 0x4               -- intosc oscillator: i/o function on clkin pin
       }
pragma fuse_def WDT:0 0x18 {               -- watchdog timer enable
       ENABLED = 0x18                      -- enabled
       RUNONLY = 0x10                      -- wdt enabled while running and disabled in sleep
       CONTROL = 0x8                       -- wdt controlled by the swdten bit in the wdtcon register
       DISABLED = 0x0                      -- disabled
       }
pragma fuse_def PWRTE:0 0x20 {             -- power-up timer enable
       DISABLED = 0x20                     -- disabled
       ENABLED = 0x0                       -- enabled
       }
pragma fuse_def MCLR:0 0x40 {              -- mclr pin function select
       EXTERNAL = 0x40                     -- enabled
       INTERNAL = 0x0                      -- disabled
       }
pragma fuse_def CP:0 0x80 {                -- flash program memory code protection
       DISABLED = 0x80                     -- disabled
       ENABLED = 0x0                       -- enabled
       }
pragma fuse_def BROWNOUT:0 0x600 {         -- brown-out reset enable
       ENABLED = 0x600                     -- enabled
       RUNONLY = 0x400                     -- brown-out reset enabled while running and disabled in sleep
       CONTROL = 0x200                     -- brown-out reset controlled by the sboren bit in the borcon register
       DISABLED = 0x0                      -- disabled
       }
pragma fuse_def CLKOUTEN:0 0x800 {         -- clock out enable
       DISABLED = 0x800                    -- disabled
       ENABLED = 0x0                       -- enabled
       }
--
-- CONFIG2 (0x8008)
--
pragma fuse_def WRT:1 0x3 {                -- flash memory self-write protection
       NO_PROTECTION = 0x3                 -- disabled
       R0000_01FF = 0x2                    -- 000h to 1ffh write protected, 200h to 7ffh may be modified by pmcon control
       R0000_03FF = 0x1                    -- 000h to 3ffh write protected, 400h to 7ffh may be modified by pmcon control
       R0000_07FF = 0x0                    -- 000h to 7ffh write protected, no addresses may be modified by pmcon control
       }
pragma fuse_def STVR:1 0x200 {             -- stack overflow/underflow reset enable
       ENABLED = 0x200                     -- enabled
       DISABLED = 0x0                      -- disabled
       }
pragma fuse_def VOLTAGE:1 0x400 {          -- brown-out reset voltage selection
       MINIMUM = 0x400                     -- brown-out reset voltage (vbor), low trip point selected.
       MAXIMUM = 0x0                       -- brown-out reset voltage (vbor), high trip point selected.
       }
pragma fuse_def LPBOR:1 0x800 {            -- low-power brown-out reset
       DISABLED = 0x800                    -- disabled
       ENABLED = 0x0                       -- enabled
       }
pragma fuse_def DEBUG:1 0x1000 {           -- in-circuit debugger mode
       DISABLED = 0x1000                   -- disabled
       ENABLED = 0x0                       -- enabled
       }
pragma fuse_def LVP:1 0x2000 {             -- low-voltage programming enable
       ENABLED = 0x2000                    -- enabled
       DISABLED = 0x0                      -- disabled
       }
--
