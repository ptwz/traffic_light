-- Title: Hardware PWM control
-- Author: Sebastien Lelong, Copyright (C) 2008-2009, all rights reserved.
-- Adapted-by: Albert Faber, Rob Hamerling.
-- Compiler: 2.4l
-- Revision: $Revision: 1.1 $
--
-- This file is part of jallib (http://jallib.googlecode.com)
-- Released under the ZLIB license (http://www.opensource.org/licenses/zlib-license.html)
--
-- Description:
-- Include this library if you want to use the PWM feature of the CCP module(s).
-- This library uses conditional compile to selectively include underlying PWM
-- libraries and number of PWM channels, according to the target PIC configuration.
-- Ex: - 16f88 has 1 PWM channel: including pwm_hardware will prepare PWM
--       for 1 channel (using pwm_ccp1.jal)
--     - 16f877 has 2 PWM channels: including pwm_hardware will prepare PWM
--       for 2 channels (using pwm_ccp1.jal and pwm_ccp2.jal)
--     - etc. for PICs with more CCP modules
-- Note: All used pin_CCPx_directions should be set to output by the application.
-- --
-- With using the PWM hardware a design choice must be made between desired
-- PWM frequency and desired PWM resolution (number of possible PWM steps).
-- Choosing maximum PWM resolution implies a relative low PWM frequency and
-- vice versa: a high frequency limits the number of available PWM steps.
-- The figures are dependent on the target clock speed.
-- Refer to pwm_common, pwm_ccp1, pwm_ccp2 ... etc. documentation to
-- understand how to use these PWM libraries.
--
-- Notes:
-- 1. Because the PWM libraries use conditional compilation and the 'alias'
--    keyword, at least JalV2 compiler version 2.4l is required.
-- 2. These libraries use the pin alias names as declared in Jallib device
--    files since revision 1171, so Jallib release 0.4 is a minimum requirement.
-- 3. Some PICs have extended CCP modules.  These will be handled by these
--    PWM libraries as 'classic' CCP modules.
--

-- ------ Alias ECCPxCON registers --------

-- NOW DONE IN DEVICEFILES


--  Include common variables and procedures
include pwm_common


--  Include the libraries for all available CCP modules

if (defined(CCP1CON) == true) then
   include pwm_ccp1
end if

if (defined(CCP2CON) == true) then
   include pwm_ccp2
end if

if (defined(CCP3CON) == true) then
   include pwm_ccp3
end if

if (defined(CCP4CON) == true) then
   include pwm_ccp4
end if

if (defined(CCP5CON) == true) then
   include pwm_ccp5
end if

if (defined(CCP6CON) == true) then
   include pwm_ccp6
end if

if (defined(CCP7CON) == true) then
   include pwm_ccp7
end if

if (defined(CCP8CON) == true) then
   include pwm_ccp8
end if

if (defined(CCP9CON) == true) then
   include pwm_ccp9
end if

if (defined(CCP10CON) == true) then
   include pwm_ccp10
end if

