-- ===================================================
-- Title: JalV2 device include file for PIC16LF1507
--
-- Author: Rob Hamerling, Copyright (c) 2008..2012, all rights reserved.
--
-- Adapted-by:
--
-- Revision: $Revision: 1.1 $
--
-- Compiler: 2.4o
--
-- This file is part of jallib  (http://jallib.googlecode.com)
-- Released under the ZLIB license  (http://www.opensource.org/licenses/zlib-license.html)
--
-- Description:
--    Device include file for pic16lf1507, containing:
--    - Declaration of ports and pins of the chip.
--    - Procedures for shadowing of ports and pins
--      to circumvent the read-modify-write problem.
--    - Symbolic definitions for configuration bits (fuses)
--    - Some device dependent procedures for common
--      operations, like:
--      . enable_digital_io()
--
-- Sources:
--  - x:/mplab886/mplab ide/device/pic16lf1507.dev
--
-- Notes:
--  - Created with Dev2Jal Rexx script version 0.1.37
--  - File creation date/time: 8 Jul 2012 14:23
--
-- ===================================================
--
const word DEVICE_ID   = 0x2DC0
const byte PICTYPE[]   = "16LF1507"
const byte DATASHEET[] = "41586A"
const byte PGMSPEC[]   = "41573C"
--
-- Vdd Range: 1.800-3.600 Nominal: 3.300
-- Vpp Range: 8.000-9.000 Default: 9.000
--
-- ---------------------------------------------------
--
include chipdef_jallib                  -- common constants
--
pragma  target  cpu   PIC_14H            -- (banks=32)
pragma  target  chip  16lf1507
pragma  target  bank  0x0080
pragma  target  page  0x0800
pragma  stack   16
pragma  code    2048
pragma  ID      0x8000,4
pragma  data    0x20-0x7E,0xA0-0xBF
pragma  shared  0x7F-0x7F
--
var volatile byte _pic_accum shared at 0x7F      -- (compiler)
--
const word  _FUSES_CT             = 2
const word  _FUSE_BASE[_FUSES_CT] = { 0x8007,
                                      0x8008 }
const word  _FUSES[_FUSES_CT]     = { 0b_0011_1111_1111_1111,         -- CONFIG1
                                      0b_0011_1111_1111_1111 }        -- CONFIG2
--
-- ------------------------------------------------
var volatile byte   INDF0                     shared at 0x0
var volatile byte   _ind                      shared at 0x0
-- ------------------------------------------------
var volatile byte   INDF1                     shared at 0x1
-- ------------------------------------------------
var volatile byte   PCL                       shared at 0x2
var volatile byte   _pcl                      shared at 0x2
-- ------------------------------------------------
var volatile byte   STATUS                    shared at 0x3
var volatile bit    STATUS_NTO                shared at STATUS : 4
var volatile bit    STATUS_NPD                shared at STATUS : 3
var volatile bit    STATUS_Z                  shared at STATUS : 2
var volatile bit    STATUS_DC                 shared at STATUS : 1
var volatile bit    STATUS_C                  shared at STATUS : 0
var volatile byte   _status                   shared at 0x3
const        byte   _not_to                          =  4
const        byte   _not_pd                          =  3
const        byte   _z                               =  2
const        byte   _dc                              =  1
const        byte   _c                               =  0
-- ------------------------------------------------
var volatile word   FSR0                      shared at 0x4
-- ------------------------------------------------
var volatile byte   FSR0L                     shared at 0x4
var volatile byte   _fsr0l                    shared at 0x4
-- ------------------------------------------------
var volatile byte   FSR0H                     shared at 0x5
var volatile byte   _fsr0h                    shared at 0x5
-- ------------------------------------------------
var volatile word   FSR1                      shared at 0x6
-- ------------------------------------------------
var volatile byte   FSR1L                     shared at 0x6
var volatile byte   _fsr1l                    shared at 0x6
-- ------------------------------------------------
var volatile byte   FSR1H                     shared at 0x7
var volatile byte   _fsr1h                    shared at 0x7
-- ------------------------------------------------
var volatile byte   BSR                       shared at 0x8
var volatile bit*5  BSR_BSR                   shared at BSR : 0
var volatile byte   _bsr                      shared at 0x8
-- ------------------------------------------------
var volatile byte   WREG                      shared at 0x9
-- ------------------------------------------------
var volatile byte   PCLATH                    shared at 0xA
var volatile bit*7  PCLATH_PCLATH             shared at PCLATH : 0
var volatile byte   _pclath                   shared at 0xA
-- ------------------------------------------------
var volatile byte   INTCON                    shared at 0xB
var volatile bit    INTCON_GIE                shared at INTCON : 7
var volatile bit    INTCON_PEIE               shared at INTCON : 6
var volatile bit    INTCON_TMR0IE             shared at INTCON : 5
var volatile bit    INTCON_INTE               shared at INTCON : 4
var volatile bit    INTCON_IOCIE              shared at INTCON : 3
var volatile bit    INTCON_TMR0IF             shared at INTCON : 2
var volatile bit    INTCON_INTF               shared at INTCON : 1
var volatile bit    INTCON_IOCIF              shared at INTCON : 0
-- ------------------------------------------------
var volatile byte   PORTA                            at 0xC
var volatile bit    PORTA_RA5                        at PORTA : 5
var volatile bit    PORTA_RA4                        at PORTA : 4
var volatile bit    PORTA_RA3                        at PORTA : 3
var volatile bit    PORTA_RA2                        at PORTA : 2
var volatile bit    PORTA_RA1                        at PORTA : 1
var volatile bit    PORTA_RA0                        at PORTA : 0
-- ------------------------------------------------
var volatile byte   PORTB                            at 0xD
var volatile bit    PORTB_RB7                        at PORTB : 7
var volatile bit    PORTB_RB6                        at PORTB : 6
var volatile bit    PORTB_RB5                        at PORTB : 5
var volatile bit    PORTB_RB4                        at PORTB : 4
-- ------------------------------------------------
var volatile byte   PORTC                            at 0xE
var volatile bit    PORTC_RC7                        at PORTC : 7
var volatile bit    PORTC_RC6                        at PORTC : 6
var volatile bit    PORTC_RC5                        at PORTC : 5
var volatile bit    PORTC_RC4                        at PORTC : 4
var volatile bit    PORTC_RC3                        at PORTC : 3
var volatile bit    PORTC_RC2                        at PORTC : 2
var volatile bit    PORTC_RC1                        at PORTC : 1
var volatile bit    PORTC_RC0                        at PORTC : 0
-- ------------------------------------------------
var volatile byte   PIR1                             at 0x11
var volatile bit    PIR1_TMR1GIF                     at PIR1 : 7
var volatile bit    PIR1_ADIF                        at PIR1 : 6
var volatile bit    PIR1_TMR2IF                      at PIR1 : 1
var volatile bit    PIR1_TMR1IF                      at PIR1 : 0
-- ------------------------------------------------
var volatile byte   PIR2                             at 0x12
var volatile bit    PIR2_NCO1IF                      at PIR2 : 2
-- ------------------------------------------------
var volatile byte   PIR3                             at 0x13
var volatile bit    PIR3_CLC2IF                      at PIR3 : 1
var volatile bit    PIR3_CLC1IF                      at PIR3 : 0
-- ------------------------------------------------
var volatile byte   TMR0                             at 0x15
-- ------------------------------------------------
var volatile word   TMR1                             at 0x16
-- ------------------------------------------------
var volatile byte   TMR1L                            at 0x16
-- ------------------------------------------------
var volatile byte   TMR1H                            at 0x17
-- ------------------------------------------------
var volatile byte   T1CON                            at 0x18
var volatile bit*2  T1CON_TMR1CS                     at T1CON : 6
var volatile bit*2  T1CON_T1CKPS                     at T1CON : 4
var volatile bit    T1CON_T1OSCEN                    at T1CON : 3
var volatile bit    T1CON_NT1SYNC                    at T1CON : 2
var volatile bit    T1CON_TMR1ON                     at T1CON : 0
-- ------------------------------------------------
var volatile byte   T1GCON                           at 0x19
var volatile bit    T1GCON_TMR1GE                    at T1GCON : 7
var volatile bit    T1GCON_T1GPOL                    at T1GCON : 6
var volatile bit    T1GCON_T1GTM                     at T1GCON : 5
var volatile bit    T1GCON_T1GSPM                    at T1GCON : 4
var volatile bit    T1GCON_T1GGO                     at T1GCON : 3
var volatile bit    T1GCON_NDONE                     at T1GCON : 3
var volatile bit    T1GCON_T1GVAL                    at T1GCON : 2
var volatile bit*2  T1GCON_T1GSS                     at T1GCON : 0
-- ------------------------------------------------
var volatile byte   TMR2                             at 0x1A
-- ------------------------------------------------
var volatile byte   PR2                              at 0x1B
-- ------------------------------------------------
var volatile byte   T2CON                            at 0x1C
var volatile bit*4  T2CON_T2OUTPS                    at T2CON : 3
var volatile bit    T2CON_TMR2ON                     at T2CON : 2
var volatile bit*2  T2CON_T2CKPS                     at T2CON : 0
-- ------------------------------------------------
var volatile byte   TRISA                            at 0x8C
alias               PORTA_direction                  is TRISA
--
procedure PORTA_low_direction'put(byte in x) is
   pragma inline
   TRISA = (TRISA & 0xF0) | (x & 0x0F)
end procedure
function PORTA_low_direction'get() return byte is
   pragma inline
   return (TRISA & 0x0F)
end function
--
procedure PORTA_high_direction'put(byte in x) is
   pragma inline
   TRISA = (TRISA & 0x0F) | (x << 4)
end procedure
function PORTA_high_direction'get() return byte is
   pragma inline
   return (TRISA >> 4)
end function
--
var volatile bit    TRISA_TRISA5                     at TRISA : 5
alias               pin_A5_direction                 is TRISA_TRISA5
alias               pin_NCO1CLK_direction            is pin_A5_direction
alias               pin_T1CKI_direction              is pin_A5_direction
alias               pin_CLKIN_direction              is pin_A5_direction
--
var volatile bit    TRISA_TRISA4                     at TRISA : 4
alias               pin_A4_direction                 is TRISA_TRISA4
alias               pin_AN3_direction                is pin_A4_direction
alias               pin_T1G_direction                is pin_A4_direction
alias               pin_CLKOUT_direction             is pin_A4_direction
--
var volatile bit    TRISA_TRISA3                     at TRISA : 3
alias               pin_A3_direction                 is TRISA_TRISA3
alias               pin_CLC1IN0_direction            is pin_A3_direction
alias               pin_MCLR_direction               is pin_A3_direction
alias               pin_VPP_direction                is pin_A3_direction
--
var volatile bit    TRISA_TRISA2                     at TRISA : 2
alias               pin_A2_direction                 is TRISA_TRISA2
alias               pin_AN2_direction                is pin_A2_direction
alias               pin_CWG1FLT_direction            is pin_A2_direction
alias               pin_CLC1_RA2_direction           is pin_A2_direction
alias               pin_T0CKI_direction              is pin_A2_direction
alias               pin_PWM3_direction               is pin_A2_direction
--
var volatile bit    TRISA_TRISA1                     at TRISA : 1
alias               pin_A1_direction                 is TRISA_TRISA1
alias               pin_AN1_direction                is pin_A1_direction
alias               pin_VREF_POS_direction           is pin_A1_direction
alias               pin_ICSPCLK_direction            is pin_A1_direction
--
var volatile bit    TRISA_TRISA0                     at TRISA : 0
alias               pin_A0_direction                 is TRISA_TRISA0
alias               pin_AN0_direction                is pin_A0_direction
alias               pin_ICSPDAT_direction            is pin_A0_direction
--
-- ------------------------------------------------
var volatile byte   TRISB                            at 0x8D
alias               PORTB_direction                  is TRISB
--
procedure PORTB_low_direction'put(byte in x) is
   pragma inline
   TRISB = (TRISB & 0xF0) | (x & 0x0F)
end procedure
function PORTB_low_direction'get() return byte is
   pragma inline
   return (TRISB & 0x0F)
end function
--
procedure PORTB_high_direction'put(byte in x) is
   pragma inline
   TRISB = (TRISB & 0x0F) | (x << 4)
end procedure
function PORTB_high_direction'get() return byte is
   pragma inline
   return (TRISB >> 4)
end function
--
var volatile bit    TRISB_TRISB7                     at TRISB : 7
alias               pin_B7_direction                 is TRISB_TRISB7
--
var volatile bit    TRISB_TRISB6                     at TRISB : 6
alias               pin_B6_direction                 is TRISB_TRISB6
--
var volatile bit    TRISB_TRISB5                     at TRISB : 5
alias               pin_B5_direction                 is TRISB_TRISB5
alias               pin_AN11_direction               is pin_B5_direction
--
var volatile bit    TRISB_TRISB4                     at TRISB : 4
alias               pin_B4_direction                 is TRISB_TRISB4
alias               pin_AN10_direction               is pin_B4_direction
--
-- ------------------------------------------------
var volatile byte   TRISC                            at 0x8E
alias               PORTC_direction                  is TRISC
--
procedure PORTC_low_direction'put(byte in x) is
   pragma inline
   TRISC = (TRISC & 0xF0) | (x & 0x0F)
end procedure
function PORTC_low_direction'get() return byte is
   pragma inline
   return (TRISC & 0x0F)
end function
--
procedure PORTC_high_direction'put(byte in x) is
   pragma inline
   TRISC = (TRISC & 0x0F) | (x << 4)
end procedure
function PORTC_high_direction'get() return byte is
   pragma inline
   return (TRISC >> 4)
end function
--
var volatile bit    TRISC_TRISC7                     at TRISC : 7
alias               pin_C7_direction                 is TRISC_TRISC7
alias               pin_AN9_direction                is pin_C7_direction
alias               pin_CLC1IN1_direction            is pin_C7_direction
--
var volatile bit    TRISC_TRISC6                     at TRISC : 6
alias               pin_C6_direction                 is TRISC_TRISC6
alias               pin_AN8_direction                is pin_C6_direction
alias               pin_NCO1_RC6_direction           is pin_C6_direction
--
var volatile bit    TRISC_TRISC5                     at TRISC : 5
alias               pin_C5_direction                 is TRISC_TRISC5
alias               pin_CWG1A_direction              is pin_C5_direction
alias               pin_CLC1_RC5_direction           is pin_C5_direction
alias               pin_PWM1_direction               is pin_C5_direction
--
var volatile bit    TRISC_TRISC4                     at TRISC : 4
alias               pin_C4_direction                 is TRISC_TRISC4
alias               pin_CWG1B_direction              is pin_C4_direction
alias               pin_CLC2IN1_direction            is pin_C4_direction
--
var volatile bit    TRISC_TRISC3                     at TRISC : 3
alias               pin_C3_direction                 is TRISC_TRISC3
alias               pin_AN7_direction                is pin_C3_direction
alias               pin_CLC2IN0_direction            is pin_C3_direction
alias               pin_PWM2_direction               is pin_C3_direction
--
var volatile bit    TRISC_TRISC2                     at TRISC : 2
alias               pin_C2_direction                 is TRISC_TRISC2
alias               pin_AN6_direction                is pin_C2_direction
--
var volatile bit    TRISC_TRISC1                     at TRISC : 1
alias               pin_C1_direction                 is TRISC_TRISC1
alias               pin_AN5_direction                is pin_C1_direction
alias               pin_NCO1_RC1_direction           is pin_C1_direction
alias               pin_PWM4_direction               is pin_C1_direction
--
var volatile bit    TRISC_TRISC0                     at TRISC : 0
alias               pin_C0_direction                 is TRISC_TRISC0
alias               pin_AN4_direction                is pin_C0_direction
alias               pin_CLC2_direction               is pin_C0_direction
--
-- ------------------------------------------------
var volatile byte   PIE1                             at 0x91
var volatile bit    PIE1_TMR1GIE                     at PIE1 : 7
var volatile bit    PIE1_ADIE                        at PIE1 : 6
var volatile bit    PIE1_TMR2IE                      at PIE1 : 1
var volatile bit    PIE1_TMR1IE                      at PIE1 : 0
-- ------------------------------------------------
var volatile byte   PIE2                             at 0x92
var volatile bit    PIE2_NCO1IE                      at PIE2 : 2
-- ------------------------------------------------
var volatile byte   PIE3                             at 0x93
var volatile bit    PIE3_CLC2IE                      at PIE3 : 1
var volatile bit    PIE3_CLC1IE                      at PIE3 : 0
-- ------------------------------------------------
var volatile byte   OPTION_REG                       at 0x95
var volatile bit    OPTION_REG_NWPUEN                at OPTION_REG : 7
var volatile bit    OPTION_REG_INTEDG                at OPTION_REG : 6
var volatile bit    OPTION_REG_TMR0CS                at OPTION_REG : 5
alias               T0CON_T0CS                       is OPTION_REG_TMR0CS
var volatile bit    OPTION_REG_TMR0SE                at OPTION_REG : 4
alias               T0CON_T0SE                       is OPTION_REG_TMR0SE
var volatile bit    OPTION_REG_PSA                   at OPTION_REG : 3
alias               T0CON_PSA                        is OPTION_REG_PSA
var volatile bit*3  OPTION_REG_PS                    at OPTION_REG : 0
alias               T0CON_T0PS                       is OPTION_REG_PS
-- ------------------------------------------------
var volatile byte   PCON                             at 0x96
var volatile bit    PCON_STKOVF                      at PCON : 7
var volatile bit    PCON_STKUNF                      at PCON : 6
var volatile bit    PCON_NRWDT                       at PCON : 4
var volatile bit    PCON_NRMCLR                      at PCON : 3
var volatile bit    PCON_NRI                         at PCON : 2
var volatile bit    PCON_NPOR                        at PCON : 1
var volatile bit    PCON_NBOR                        at PCON : 0
-- ------------------------------------------------
var volatile byte   WDTCON                           at 0x97
var volatile bit*5  WDTCON_WDTPS                     at WDTCON : 1
var volatile bit    WDTCON_SWDTEN                    at WDTCON : 0
-- ------------------------------------------------
var volatile byte   OSCCON                           at 0x99
var volatile bit*4  OSCCON_IRCF                      at OSCCON : 3
var volatile bit*2  OSCCON_SCS                       at OSCCON : 0
-- ------------------------------------------------
var volatile byte   OSCSTAT                          at 0x9A
var volatile bit    OSCSTAT_SOSCR                    at OSCSTAT : 7
var volatile bit    OSCSTAT_OSTS                     at OSCSTAT : 5
var volatile bit    OSCSTAT_HFIOFR                   at OSCSTAT : 4
var volatile bit    OSCSTAT_LFIOFR                   at OSCSTAT : 1
var volatile bit    OSCSTAT_HFIOFS                   at OSCSTAT : 0
-- ------------------------------------------------
var volatile word   ADRES                            at 0x9B
-- ------------------------------------------------
var volatile byte   ADRESL                           at 0x9B
-- ------------------------------------------------
var volatile byte   ADRESH                           at 0x9C
-- ------------------------------------------------
var volatile byte   ADCON0                           at 0x9D
var volatile bit*5  ADCON0_CHS                       at ADCON0 : 2
var volatile bit    ADCON0_GO                        at ADCON0 : 1
var volatile bit    ADCON0_NDONE                     at ADCON0 : 1
var volatile bit    ADCON0_ADON                      at ADCON0 : 0
-- ------------------------------------------------
var volatile byte   ADCON1                           at 0x9E
var volatile bit    ADCON1_ADFM                      at ADCON1 : 7
var volatile bit*3  ADCON1_ADCS                      at ADCON1 : 4
var volatile bit    ADCON1_ADPREF1                   at ADCON1 : 1
var volatile bit    ADCON1_ADPREF0                   at ADCON1 : 0
-- ------------------------------------------------
var volatile byte   ADCON2                           at 0x9F
var volatile bit*4  ADCON2_TRIGSEL                   at ADCON2 : 4
-- ------------------------------------------------
var volatile byte   LATA                             at 0x10C
--
procedure PORTA'put(byte in x at LATA) is
   pragma inline
end procedure
--
procedure PORTA_low'put(byte in x) is
   pragma inline
   LATA = (LATA & 0xF0) | (x & 0x0F)
end procedure
function PORTA_low'get() return byte is
   pragma inline
   return (PORTA & 0x0F)
end function
--
procedure PORTA_high'put(byte in x) is
   pragma inline
   LATA = (LATA & 0x0F) | (x << 4)
end procedure
function PORTA_high'get() return byte is
   pragma inline
   return (PORTA >> 4)
end function
--
var volatile bit    LATA_LATA5                       at LATA : 5
var volatile bit    pin_A5                           at PORTA : 5
alias               pin_NCO1CLK                      is pin_A5
alias               pin_T1CKI                        is pin_A5
alias               pin_CLKIN                        is pin_A5
--
procedure pin_A5'put(bit in x at LATA : 5) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA4                       at LATA : 4
var volatile bit    pin_A4                           at PORTA : 4
alias               pin_AN3                          is pin_A4
alias               pin_T1G                          is pin_A4
alias               pin_CLKOUT                       is pin_A4
--
procedure pin_A4'put(bit in x at LATA : 4) is
   pragma inline
end procedure
--
var volatile bit    pin_A3                           at PORTA : 3
alias               pin_CLC1IN0                      is pin_A3
alias               pin_MCLR                         is pin_A3
alias               pin_VPP                          is pin_A3
--
var volatile bit    LATA_LATA2                       at LATA : 2
var volatile bit    pin_A2                           at PORTA : 2
alias               pin_AN2                          is pin_A2
alias               pin_CWG1FLT                      is pin_A2
alias               pin_CLC1_RA2                     is pin_A2
alias               pin_T0CKI                        is pin_A2
alias               pin_PWM3                         is pin_A2
--
procedure pin_A2'put(bit in x at LATA : 2) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA1                       at LATA : 1
var volatile bit    pin_A1                           at PORTA : 1
alias               pin_AN1                          is pin_A1
alias               pin_VREF_POS                     is pin_A1
alias               pin_ICSPCLK                      is pin_A1
--
procedure pin_A1'put(bit in x at LATA : 1) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA0                       at LATA : 0
var volatile bit    pin_A0                           at PORTA : 0
alias               pin_AN0                          is pin_A0
alias               pin_ICSPDAT                      is pin_A0
--
procedure pin_A0'put(bit in x at LATA : 0) is
   pragma inline
end procedure
--
-- ------------------------------------------------
var volatile byte   LATB                             at 0x10D
--
procedure PORTB'put(byte in x at LATB) is
   pragma inline
end procedure
--
procedure PORTB_low'put(byte in x) is
   pragma inline
   LATB = (LATB & 0xF0) | (x & 0x0F)
end procedure
function PORTB_low'get() return byte is
   pragma inline
   return (PORTB & 0x0F)
end function
--
procedure PORTB_high'put(byte in x) is
   pragma inline
   LATB = (LATB & 0x0F) | (x << 4)
end procedure
function PORTB_high'get() return byte is
   pragma inline
   return (PORTB >> 4)
end function
--
var volatile bit    LATB_LATB7                       at LATB : 7
var volatile bit    pin_B7                           at PORTB : 7
--
procedure pin_B7'put(bit in x at LATB : 7) is
   pragma inline
end procedure
--
var volatile bit    LATB_LATB6                       at LATB : 6
var volatile bit    pin_B6                           at PORTB : 6
--
procedure pin_B6'put(bit in x at LATB : 6) is
   pragma inline
end procedure
--
var volatile bit    LATB_LATB5                       at LATB : 5
var volatile bit    pin_B5                           at PORTB : 5
alias               pin_AN11                         is pin_B5
--
procedure pin_B5'put(bit in x at LATB : 5) is
   pragma inline
end procedure
--
var volatile bit    LATB_LATB4                       at LATB : 4
var volatile bit    pin_B4                           at PORTB : 4
alias               pin_AN10                         is pin_B4
--
procedure pin_B4'put(bit in x at LATB : 4) is
   pragma inline
end procedure
--
-- ------------------------------------------------
var volatile byte   LATC                             at 0x10E
--
procedure PORTC'put(byte in x at LATC) is
   pragma inline
end procedure
--
procedure PORTC_low'put(byte in x) is
   pragma inline
   LATC = (LATC & 0xF0) | (x & 0x0F)
end procedure
function PORTC_low'get() return byte is
   pragma inline
   return (PORTC & 0x0F)
end function
--
procedure PORTC_high'put(byte in x) is
   pragma inline
   LATC = (LATC & 0x0F) | (x << 4)
end procedure
function PORTC_high'get() return byte is
   pragma inline
   return (PORTC >> 4)
end function
--
var volatile bit    LATC_LATC7                       at LATC : 7
var volatile bit    pin_C7                           at PORTC : 7
alias               pin_AN9                          is pin_C7
alias               pin_CLC1IN1                      is pin_C7
--
procedure pin_C7'put(bit in x at LATC : 7) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC6                       at LATC : 6
var volatile bit    pin_C6                           at PORTC : 6
alias               pin_AN8                          is pin_C6
alias               pin_NCO1_RC6                     is pin_C6
--
procedure pin_C6'put(bit in x at LATC : 6) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC5                       at LATC : 5
var volatile bit    pin_C5                           at PORTC : 5
alias               pin_CWG1A                        is pin_C5
alias               pin_CLC1_RC5                     is pin_C5
alias               pin_PWM1                         is pin_C5
--
procedure pin_C5'put(bit in x at LATC : 5) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC4                       at LATC : 4
var volatile bit    pin_C4                           at PORTC : 4
alias               pin_CWG1B                        is pin_C4
alias               pin_CLC2IN1                      is pin_C4
--
procedure pin_C4'put(bit in x at LATC : 4) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC3                       at LATC : 3
var volatile bit    pin_C3                           at PORTC : 3
alias               pin_AN7                          is pin_C3
alias               pin_CLC2IN0                      is pin_C3
alias               pin_PWM2                         is pin_C3
--
procedure pin_C3'put(bit in x at LATC : 3) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC2                       at LATC : 2
var volatile bit    pin_C2                           at PORTC : 2
alias               pin_AN6                          is pin_C2
--
procedure pin_C2'put(bit in x at LATC : 2) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC1                       at LATC : 1
var volatile bit    pin_C1                           at PORTC : 1
alias               pin_AN5                          is pin_C1
alias               pin_NCO1_RC1                     is pin_C1
alias               pin_PWM4                         is pin_C1
--
procedure pin_C1'put(bit in x at LATC : 1) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC0                       at LATC : 0
var volatile bit    pin_C0                           at PORTC : 0
alias               pin_AN4                          is pin_C0
alias               pin_CLC2                         is pin_C0
--
procedure pin_C0'put(bit in x at LATC : 0) is
   pragma inline
end procedure
--
-- ------------------------------------------------
var volatile byte   BORCON                           at 0x116
var volatile bit    BORCON_SBOREN                    at BORCON : 7
var volatile bit    BORCON_BORFS                     at BORCON : 6
var volatile bit    BORCON_BORRDY                    at BORCON : 0
-- ------------------------------------------------
var volatile byte   FVRCON                           at 0x117
var volatile bit    FVRCON_FVREN                     at FVRCON : 7
var volatile bit    FVRCON_FVRRDY                    at FVRCON : 6
var volatile bit    FVRCON_TSEN                      at FVRCON : 5
var volatile bit    FVRCON_TSRNG                     at FVRCON : 4
var volatile bit*2  FVRCON_ADFVR                     at FVRCON : 0
-- ------------------------------------------------
var volatile byte   APFCON                           at 0x11D
var volatile bit    APFCON_CLC1SEL                   at APFCON : 1
var volatile bit    APFCON_NCO1SEL                   at APFCON : 0
-- ------------------------------------------------
var volatile byte   ANSELA                           at 0x18C
var volatile bit    ANSELA_ANSA4                     at ANSELA : 4
alias               JANSEL_ANS3                      is ANSELA_ANSA4
var volatile bit    ANSELA_ANSA2                     at ANSELA : 2
alias               JANSEL_ANS2                      is ANSELA_ANSA2
var volatile bit    ANSELA_ANSA1                     at ANSELA : 1
alias               JANSEL_ANS1                      is ANSELA_ANSA1
var volatile bit    ANSELA_ANSA0                     at ANSELA : 0
alias               JANSEL_ANS0                      is ANSELA_ANSA0
-- ------------------------------------------------
var volatile byte   ANSELB                           at 0x18D
var volatile bit    ANSELB_ANSB5                     at ANSELB : 5
alias               JANSEL_ANS11                     is ANSELB_ANSB5
var volatile bit    ANSELB_ANSB4                     at ANSELB : 4
alias               JANSEL_ANS10                     is ANSELB_ANSB4
-- ------------------------------------------------
var volatile byte   ANSELC                           at 0x18E
var volatile bit    ANSELC_ANSC7                     at ANSELC : 7
alias               JANSEL_ANS9                      is ANSELC_ANSC7
var volatile bit    ANSELC_ANSC6                     at ANSELC : 6
alias               JANSEL_ANS8                      is ANSELC_ANSC6
var volatile bit    ANSELC_ANSC3                     at ANSELC : 3
alias               JANSEL_ANS7                      is ANSELC_ANSC3
var volatile bit    ANSELC_ANSC2                     at ANSELC : 2
alias               JANSEL_ANS6                      is ANSELC_ANSC2
var volatile bit    ANSELC_ANSC1                     at ANSELC : 1
alias               JANSEL_ANS5                      is ANSELC_ANSC1
var volatile bit    ANSELC_ANSC0                     at ANSELC : 0
alias               JANSEL_ANS4                      is ANSELC_ANSC0
-- ------------------------------------------------
var volatile word   PMADR                            at 0x191
-- ------------------------------------------------
var volatile byte   PMADRL                           at 0x191
-- ------------------------------------------------
var volatile byte   PMADRH                           at 0x192
var volatile bit*7  PMADRH_PMADRH                    at PMADRH : 0
-- ------------------------------------------------
var volatile word   PMDAT                            at 0x193
-- ------------------------------------------------
var volatile byte   PMDATL                           at 0x193
-- ------------------------------------------------
var volatile byte   PMDATH                           at 0x194
var volatile bit*6  PMDATH_PMDATH                    at PMDATH : 0
-- ------------------------------------------------
var volatile byte   PMCON1                           at 0x195
var volatile bit    PMCON1_CFGS                      at PMCON1 : 6
var volatile bit    PMCON1_LWLO                      at PMCON1 : 5
var volatile bit    PMCON1_FREE                      at PMCON1 : 4
var volatile bit    PMCON1_WRERR                     at PMCON1 : 3
var volatile bit    PMCON1_WREN                      at PMCON1 : 2
var volatile bit    PMCON1_WR                        at PMCON1 : 1
var volatile bit    PMCON1_RD                        at PMCON1 : 0
-- ------------------------------------------------
var volatile byte   PMCON2                           at 0x196
-- ------------------------------------------------
var volatile byte   WPUA                             at 0x20C
var volatile bit    WPUA_WPUA5                       at WPUA : 5
var volatile bit    WPUA_WPUA4                       at WPUA : 4
var volatile bit    WPUA_WPUA3                       at WPUA : 3
var volatile bit    WPUA_WPUA2                       at WPUA : 2
var volatile bit    WPUA_WPUA1                       at WPUA : 1
var volatile bit    WPUA_WPUA0                       at WPUA : 0
-- ------------------------------------------------
var volatile byte   WPUB                             at 0x20D
var volatile bit    WPUB_WPUB7                       at WPUB : 7
var volatile bit    WPUB_WPUB6                       at WPUB : 6
var volatile bit    WPUB_WPUB5                       at WPUB : 5
var volatile bit    WPUB_WPUB4                       at WPUB : 4
-- ------------------------------------------------
var volatile byte   IOCAP                            at 0x391
var volatile bit    IOCAP_IOCAP5                     at IOCAP : 5
var volatile bit    IOCAP_IOCAP4                     at IOCAP : 4
var volatile bit    IOCAP_IOCAP3                     at IOCAP : 3
var volatile bit    IOCAP_IOCAP2                     at IOCAP : 2
var volatile bit    IOCAP_IOCAP1                     at IOCAP : 1
var volatile bit    IOCAP_IOCAP0                     at IOCAP : 0
-- ------------------------------------------------
var volatile byte   IOCAN                            at 0x392
var volatile bit    IOCAN_IOCAN5                     at IOCAN : 5
var volatile bit    IOCAN_IOCAN4                     at IOCAN : 4
var volatile bit    IOCAN_IOCAN3                     at IOCAN : 3
var volatile bit    IOCAN_IOCAN2                     at IOCAN : 2
var volatile bit    IOCAN_IOCAN1                     at IOCAN : 1
var volatile bit    IOCAN_IOCAN0                     at IOCAN : 0
-- ------------------------------------------------
var volatile byte   IOCAF                            at 0x393
var volatile bit    IOCAF_IOCAF5                     at IOCAF : 5
var volatile bit    IOCAF_IOCAF4                     at IOCAF : 4
var volatile bit    IOCAF_IOCAF3                     at IOCAF : 3
var volatile bit    IOCAF_IOCAF2                     at IOCAF : 2
var volatile bit    IOCAF_IOCAF1                     at IOCAF : 1
var volatile bit    IOCAF_IOCAF0                     at IOCAF : 0
-- ------------------------------------------------
var volatile byte   IOCBP                            at 0x394
var volatile bit    IOCBP_IOCBP7                     at IOCBP : 7
var volatile bit    IOCBP_IOCBP6                     at IOCBP : 6
var volatile bit    IOCBP_IOCBP5                     at IOCBP : 5
var volatile bit    IOCBP_IOCBP4                     at IOCBP : 4
-- ------------------------------------------------
var volatile byte   IOCBN                            at 0x395
var volatile bit    IOCBN_IOCBN7                     at IOCBN : 7
var volatile bit    IOCBN_IOCBN6                     at IOCBN : 6
var volatile bit    IOCBN_IOCBN5                     at IOCBN : 5
var volatile bit    IOCBN_IOCBN4                     at IOCBN : 4
-- ------------------------------------------------
var volatile byte   IOCBF                            at 0x396
var volatile bit    IOCBF_IOCBF7                     at IOCBF : 7
var volatile bit    IOCBF_IOCBF6                     at IOCBF : 6
var volatile bit    IOCBF_IOCBF5                     at IOCBF : 5
var volatile bit    IOCBF_IOCBF4                     at IOCBF : 4
-- ------------------------------------------------
var volatile byte*3 NCO1ACC                          at 0x498
-- ------------------------------------------------
var volatile byte   NCO1ACCL                         at 0x498
var volatile bit    NCO1ACCL_NCO1ACC7                at NCO1ACCL : 7
var volatile bit    NCO1ACCL_NCO1ACC6                at NCO1ACCL : 6
var volatile bit    NCO1ACCL_NCO1ACC5                at NCO1ACCL : 5
var volatile bit    NCO1ACCL_NCO1ACC4                at NCO1ACCL : 4
var volatile bit    NCO1ACCL_NCO1ACC3                at NCO1ACCL : 3
var volatile bit    NCO1ACCL_NCO1ACC2                at NCO1ACCL : 2
var volatile bit    NCO1ACCL_NCO1ACC1                at NCO1ACCL : 1
var volatile bit    NCO1ACCL_NCO1ACC0                at NCO1ACCL : 0
-- ------------------------------------------------
var volatile byte   NCO1ACCH                         at 0x499
var volatile bit    NCO1ACCH_NCO1ACC15               at NCO1ACCH : 7
var volatile bit    NCO1ACCH_NCO1ACC14               at NCO1ACCH : 6
var volatile bit    NCO1ACCH_NCO1ACC13               at NCO1ACCH : 5
var volatile bit    NCO1ACCH_NCO1ACC12               at NCO1ACCH : 4
var volatile bit    NCO1ACCH_NCO1ACC11               at NCO1ACCH : 3
var volatile bit    NCO1ACCH_NCO1ACC10               at NCO1ACCH : 2
var volatile bit    NCO1ACCH_NCO1ACC9                at NCO1ACCH : 1
var volatile bit    NCO1ACCH_NCO1ACC8                at NCO1ACCH : 0
-- ------------------------------------------------
var volatile byte   NCO1ACCU                         at 0x49A
var volatile bit    NCO1ACCU_NCO1ACC19               at NCO1ACCU : 3
var volatile bit    NCO1ACCU_NCO1ACC18               at NCO1ACCU : 2
var volatile bit    NCO1ACCU_NCO1ACC17               at NCO1ACCU : 1
var volatile bit    NCO1ACCU_NCO1ACC16               at NCO1ACCU : 0
-- ------------------------------------------------
var volatile byte*3 NCO1INC                          at 0x49B
-- ------------------------------------------------
var volatile byte   NCO1INCL                         at 0x49B
var volatile bit    NCO1INCL_NCO1INC7                at NCO1INCL : 7
var volatile bit    NCO1INCL_NCO1INC6                at NCO1INCL : 6
var volatile bit    NCO1INCL_NCO1INC5                at NCO1INCL : 5
var volatile bit    NCO1INCL_NCO1INC4                at NCO1INCL : 4
var volatile bit    NCO1INCL_NCO1INC3                at NCO1INCL : 3
var volatile bit    NCO1INCL_NCO1INC2                at NCO1INCL : 2
var volatile bit    NCO1INCL_NCO1INC1                at NCO1INCL : 1
var volatile bit    NCO1INCL_NCO1INC0                at NCO1INCL : 0
-- ------------------------------------------------
var volatile byte   NCO1INCH                         at 0x49C
var volatile bit    NCO1INCH_NCO1INC15               at NCO1INCH : 7
var volatile bit    NCO1INCH_NCO1INC14               at NCO1INCH : 6
var volatile bit    NCO1INCH_NCO1INC13               at NCO1INCH : 5
var volatile bit    NCO1INCH_NCO1INC12               at NCO1INCH : 4
var volatile bit    NCO1INCH_NCO1INC11               at NCO1INCH : 3
var volatile bit    NCO1INCH_NCO1INC10               at NCO1INCH : 2
var volatile bit    NCO1INCH_NCO1INC9                at NCO1INCH : 1
var volatile bit    NCO1INCH_NCO1INC8                at NCO1INCH : 0
-- ------------------------------------------------
var volatile byte   NCO1INCU                         at 0x49D
-- ------------------------------------------------
var volatile byte   NCO1CON                          at 0x49E
var volatile bit    NCO1CON_N1EN                     at NCO1CON : 7
var volatile bit    NCO1CON_N1OE                     at NCO1CON : 6
var volatile bit    NCO1CON_N1OUT                    at NCO1CON : 5
var volatile bit    NCO1CON_N1POL                    at NCO1CON : 4
var volatile bit    NCO1CON_N1PFM                    at NCO1CON : 0
-- ------------------------------------------------
var volatile byte   NCO1CLK                          at 0x49F
var volatile bit*3  NCO1CLK_N1PWS                    at NCO1CLK : 5
var volatile bit*4  NCO1CLK_N1CKS                    at NCO1CLK : 0
-- ------------------------------------------------
var volatile byte   PWM1DCL                          at 0x611
var volatile bit*2  PWM1DCL_PWM1DCL                  at PWM1DCL : 6
-- ------------------------------------------------
var volatile byte   PWM1DCH                          at 0x612
-- ------------------------------------------------
var volatile byte   PWM1CON                          at 0x613
var volatile bit    PWM1CON_PWM1EN                   at PWM1CON : 7
var volatile bit    PWM1CON_PWM1OE                   at PWM1CON : 6
var volatile bit    PWM1CON_PWM1OUT                  at PWM1CON : 5
var volatile bit    PWM1CON_PWM1POL                  at PWM1CON : 4
-- ------------------------------------------------
var volatile byte   PWM2DCL                          at 0x614
var volatile bit*2  PWM2DCL_PWM2DCL                  at PWM2DCL : 6
-- ------------------------------------------------
var volatile byte   PWM2DCH                          at 0x615
-- ------------------------------------------------
var volatile byte   PWM2CON                          at 0x616
var volatile bit    PWM2CON_PWM2EN                   at PWM2CON : 7
var volatile bit    PWM2CON_PWM2OE                   at PWM2CON : 6
var volatile bit    PWM2CON_PWM2OUT                  at PWM2CON : 5
var volatile bit    PWM2CON_PWM2POL                  at PWM2CON : 4
-- ------------------------------------------------
var volatile byte   PWM3DCL                          at 0x617
var volatile bit*2  PWM3DCL_PWM3DCL                  at PWM3DCL : 6
-- ------------------------------------------------
var volatile byte   PWM3DCH                          at 0x618
-- ------------------------------------------------
var volatile byte   PWM3CON                          at 0x619
var volatile bit    PWM3CON_PWM3EN                   at PWM3CON : 7
var volatile bit    PWM3CON_PWM3OE                   at PWM3CON : 6
var volatile bit    PWM3CON_PWM3OUT                  at PWM3CON : 5
var volatile bit    PWM3CON_PWM3POL                  at PWM3CON : 4
-- ------------------------------------------------
var volatile byte   PWM4DCL                          at 0x61A
var volatile bit*2  PWM4DCL_PWM4DCL                  at PWM4DCL : 6
-- ------------------------------------------------
var volatile byte   PWM4DCH                          at 0x61B
-- ------------------------------------------------
var volatile byte   PWM4CON                          at 0x61C
var volatile bit    PWM4CON_PWM4EN                   at PWM4CON : 7
var volatile bit    PWM4CON_PWM4OE                   at PWM4CON : 6
var volatile bit    PWM4CON_PWM4OUT                  at PWM4CON : 5
var volatile bit    PWM4CON_PWM4POL                  at PWM4CON : 4
-- ------------------------------------------------
var volatile byte   CWG1DBR                          at 0x691
var volatile bit*6  CWG1DBR_CWG1DBR                  at CWG1DBR : 0
-- ------------------------------------------------
var volatile byte   CWG1DBF                          at 0x692
var volatile bit*6  CWG1DBF_CWG1DBF                  at CWG1DBF : 0
-- ------------------------------------------------
var volatile byte   CWG1CON0                         at 0x693
var volatile bit    CWG1CON0_G1EN                    at CWG1CON0 : 7
var volatile bit    CWG1CON0_G1OEB                   at CWG1CON0 : 6
var volatile bit    CWG1CON0_G1OEA                   at CWG1CON0 : 5
var volatile bit    CWG1CON0_G1POLB                  at CWG1CON0 : 4
var volatile bit    CWG1CON0_G1POLA                  at CWG1CON0 : 3
var volatile bit    CWG1CON0_G1CS0                   at CWG1CON0 : 0
-- ------------------------------------------------
var volatile byte   CWG1CON1                         at 0x694
var volatile bit*2  CWG1CON1_G1ASDLB                 at CWG1CON1 : 6
var volatile bit*2  CWG1CON1_G1ASDLA                 at CWG1CON1 : 4
var volatile bit    CWG1CON1_G1IS2                   at CWG1CON1 : 2
var volatile bit    CWG1CON1_G1IS1                   at CWG1CON1 : 1
var volatile bit    CWG1CON1_G1IS0                   at CWG1CON1 : 0
-- ------------------------------------------------
var volatile byte   CWG1CON2                         at 0x695
var volatile bit    CWG1CON2_G1ASE                   at CWG1CON2 : 7
var volatile bit    CWG1CON2_G1ARSEN                 at CWG1CON2 : 6
var volatile bit    CWG1CON2_G1ASDSFLT               at CWG1CON2 : 1
var volatile bit    CWG1CON2_G1ASDSCLC2              at CWG1CON2 : 0
-- ------------------------------------------------
var volatile byte   CLCDATA                          at 0xF0F
var volatile bit    CLCDATA_MCLC2OUT                 at CLCDATA : 1
var volatile bit    CLCDATA_MCLC1OUT                 at CLCDATA : 0
-- ------------------------------------------------
var volatile byte   CLC1CON                          at 0xF10
var volatile bit    CLC1CON_LC1EN                    at CLC1CON : 7
var volatile bit    CLC1CON_LC1OE                    at CLC1CON : 6
var volatile bit    CLC1CON_LC1OUT                   at CLC1CON : 5
var volatile bit    CLC1CON_LC1INTP                  at CLC1CON : 4
var volatile bit    CLC1CON_LC1INTN                  at CLC1CON : 3
var volatile bit    CLC1CON_LC1MODE2                 at CLC1CON : 2
var volatile bit    CLC1CON_LC1MODE1                 at CLC1CON : 1
var volatile bit    CLC1CON_LC1MODE0                 at CLC1CON : 0
-- ------------------------------------------------
var volatile byte   CLC1POL                          at 0xF11
var volatile bit    CLC1POL_LC1POL                   at CLC1POL : 7
var volatile bit    CLC1POL_LC1G4POL                 at CLC1POL : 3
var volatile bit    CLC1POL_LC1G3POL                 at CLC1POL : 2
var volatile bit    CLC1POL_LC1G2POL                 at CLC1POL : 1
var volatile bit    CLC1POL_LC1G1POL                 at CLC1POL : 0
-- ------------------------------------------------
var volatile byte   CLC1SEL0                         at 0xF12
var volatile bit    CLC1SEL0_LC1D2S2                 at CLC1SEL0 : 6
var volatile bit    CLC1SEL0_LC1D2S1                 at CLC1SEL0 : 5
var volatile bit    CLC1SEL0_LC1D2S0                 at CLC1SEL0 : 4
var volatile bit    CLC1SEL0_LC1D1S2                 at CLC1SEL0 : 2
var volatile bit    CLC1SEL0_LC1D1S1                 at CLC1SEL0 : 1
var volatile bit    CLC1SEL0_LC1D1S0                 at CLC1SEL0 : 0
-- ------------------------------------------------
var volatile byte   CLC1SEL1                         at 0xF13
var volatile bit    CLC1SEL1_LC1D4S2                 at CLC1SEL1 : 6
var volatile bit    CLC1SEL1_LC1D4S1                 at CLC1SEL1 : 5
var volatile bit    CLC1SEL1_LC1D4S0                 at CLC1SEL1 : 4
var volatile bit    CLC1SEL1_LC1D3S2                 at CLC1SEL1 : 2
var volatile bit    CLC1SEL1_LC1D3S1                 at CLC1SEL1 : 1
var volatile bit    CLC1SEL1_LC1D3S0                 at CLC1SEL1 : 0
-- ------------------------------------------------
var volatile byte   CLC1GLS0                         at 0xF14
var volatile bit    CLC1GLS0_LC1G1D4T                at CLC1GLS0 : 7
var volatile bit    CLC1GLS0_LC1G1D4N                at CLC1GLS0 : 6
var volatile bit    CLC1GLS0_LC1G1D3T                at CLC1GLS0 : 5
var volatile bit    CLC1GLS0_LC1G1D3N                at CLC1GLS0 : 4
var volatile bit    CLC1GLS0_LC1G1D2T                at CLC1GLS0 : 3
var volatile bit    CLC1GLS0_LC1G1D2N                at CLC1GLS0 : 2
var volatile bit    CLC1GLS0_LC1G1D1T                at CLC1GLS0 : 1
var volatile bit    CLC1GLS0_LC1G1D1N                at CLC1GLS0 : 0
-- ------------------------------------------------
var volatile byte   CLC1GLS1                         at 0xF15
var volatile bit    CLC1GLS1_LC1G2D4T                at CLC1GLS1 : 7
var volatile bit    CLC1GLS1_LC1G2D4N                at CLC1GLS1 : 6
var volatile bit    CLC1GLS1_LC1G2D3T                at CLC1GLS1 : 5
var volatile bit    CLC1GLS1_LC1G2D3N                at CLC1GLS1 : 4
var volatile bit    CLC1GLS1_LC1G2D2T                at CLC1GLS1 : 3
var volatile bit    CLC1GLS1_LC1G2D2N                at CLC1GLS1 : 2
var volatile bit    CLC1GLS1_LC1G2D1T                at CLC1GLS1 : 1
var volatile bit    CLC1GLS1_LC1G2D1N                at CLC1GLS1 : 0
-- ------------------------------------------------
var volatile byte   CLC1GLS2                         at 0xF16
var volatile bit    CLC1GLS2_LC1G3D4T                at CLC1GLS2 : 7
var volatile bit    CLC1GLS2_LC1G3D4N                at CLC1GLS2 : 6
var volatile bit    CLC1GLS2_LC1G3D3T                at CLC1GLS2 : 5
var volatile bit    CLC1GLS2_LC1G3D3N                at CLC1GLS2 : 4
var volatile bit    CLC1GLS2_LC1G3D2T                at CLC1GLS2 : 3
var volatile bit    CLC1GLS2_LC1G3D2N                at CLC1GLS2 : 2
var volatile bit    CLC1GLS2_LC1G3D1T                at CLC1GLS2 : 1
var volatile bit    CLC1GLS2_LC1G3D1N                at CLC1GLS2 : 0
-- ------------------------------------------------
var volatile byte   CLC1GLS3                         at 0xF17
var volatile bit    CLC1GLS3_LC1G4D4T                at CLC1GLS3 : 7
var volatile bit    CLC1GLS3_LC1G4D4N                at CLC1GLS3 : 6
var volatile bit    CLC1GLS3_LC1G4D3T                at CLC1GLS3 : 5
var volatile bit    CLC1GLS3_LC1G4D3N                at CLC1GLS3 : 4
var volatile bit    CLC1GLS3_LC1G4D2T                at CLC1GLS3 : 3
var volatile bit    CLC1GLS3_LC1G4D2N                at CLC1GLS3 : 2
var volatile bit    CLC1GLS3_LC1G4D1T                at CLC1GLS3 : 1
var volatile bit    CLC1GLS3_LC1G4D1N                at CLC1GLS3 : 0
-- ------------------------------------------------
var volatile byte   CLC2CON                          at 0xF18
var volatile bit    CLC2CON_LC2EN                    at CLC2CON : 7
var volatile bit    CLC2CON_LC2OE                    at CLC2CON : 6
var volatile bit    CLC2CON_LC2OUT                   at CLC2CON : 5
var volatile bit    CLC2CON_LC2INTP                  at CLC2CON : 4
var volatile bit    CLC2CON_LC2INTN                  at CLC2CON : 3
var volatile bit    CLC2CON_LC2MODE2                 at CLC2CON : 2
var volatile bit    CLC2CON_LC2MODE1                 at CLC2CON : 1
var volatile bit    CLC2CON_LC2MODE0                 at CLC2CON : 0
-- ------------------------------------------------
var volatile byte   CLC2POL                          at 0xF19
var volatile bit    CLC2POL_LC2POL                   at CLC2POL : 7
var volatile bit    CLC2POL_LC2G4POL                 at CLC2POL : 3
var volatile bit    CLC2POL_LC2G3POL                 at CLC2POL : 2
var volatile bit    CLC2POL_LC2G2POL                 at CLC2POL : 1
var volatile bit    CLC2POL_LC2G1POL                 at CLC2POL : 0
-- ------------------------------------------------
var volatile byte   CLC2SEL0                         at 0xF1A
var volatile bit    CLC2SEL0_LC2D2S2                 at CLC2SEL0 : 6
var volatile bit    CLC2SEL0_LC2D2S1                 at CLC2SEL0 : 5
var volatile bit    CLC2SEL0_LC2D2S0                 at CLC2SEL0 : 4
var volatile bit    CLC2SEL0_LC2D1S2                 at CLC2SEL0 : 2
var volatile bit    CLC2SEL0_LC2D1S1                 at CLC2SEL0 : 1
var volatile bit    CLC2SEL0_LC2D1S0                 at CLC2SEL0 : 0
-- ------------------------------------------------
var volatile byte   CLC2SEL1                         at 0xF1B
var volatile bit    CLC2SEL1_LC2D4S2                 at CLC2SEL1 : 6
var volatile bit    CLC2SEL1_LC2D4S1                 at CLC2SEL1 : 5
var volatile bit    CLC2SEL1_LC2D4S0                 at CLC2SEL1 : 4
var volatile bit    CLC2SEL1_LC2D3S2                 at CLC2SEL1 : 2
var volatile bit    CLC2SEL1_LC2D3S1                 at CLC2SEL1 : 1
var volatile bit    CLC2SEL1_LC2D3S0                 at CLC2SEL1 : 0
-- ------------------------------------------------
var volatile byte   CLC2GLS0                         at 0xF1C
var volatile bit    CLC2GLS0_LC2G1D4T                at CLC2GLS0 : 7
var volatile bit    CLC2GLS0_LC2G1D4N                at CLC2GLS0 : 6
var volatile bit    CLC2GLS0_LC2G1D3T                at CLC2GLS0 : 5
var volatile bit    CLC2GLS0_LC2G1D3N                at CLC2GLS0 : 4
var volatile bit    CLC2GLS0_LC2G1D2T                at CLC2GLS0 : 3
var volatile bit    CLC2GLS0_LC2G1D2N                at CLC2GLS0 : 2
var volatile bit    CLC2GLS0_LC2G1D1T                at CLC2GLS0 : 1
var volatile bit    CLC2GLS0_LC2G1D1N                at CLC2GLS0 : 0
-- ------------------------------------------------
var volatile byte   CLC2GLS1                         at 0xF1D
var volatile bit    CLC2GLS1_LC2G2D4T                at CLC2GLS1 : 7
var volatile bit    CLC2GLS1_LC2G2D4N                at CLC2GLS1 : 6
var volatile bit    CLC2GLS1_LC2G2D3T                at CLC2GLS1 : 5
var volatile bit    CLC2GLS1_LC2G2D3N                at CLC2GLS1 : 4
var volatile bit    CLC2GLS1_LC2G2D2T                at CLC2GLS1 : 3
var volatile bit    CLC2GLS1_LC2G2D2N                at CLC2GLS1 : 2
var volatile bit    CLC2GLS1_LC2G2D1T                at CLC2GLS1 : 1
var volatile bit    CLC2GLS1_LC2G2D1N                at CLC2GLS1 : 0
-- ------------------------------------------------
var volatile byte   CLC2GLS2                         at 0xF1E
var volatile bit    CLC2GLS2_LC2G3D4T                at CLC2GLS2 : 7
var volatile bit    CLC2GLS2_LC2G3D4N                at CLC2GLS2 : 6
var volatile bit    CLC2GLS2_LC2G3D3T                at CLC2GLS2 : 5
var volatile bit    CLC2GLS2_LC2G3D3N                at CLC2GLS2 : 4
var volatile bit    CLC2GLS2_LC2G3D2T                at CLC2GLS2 : 3
var volatile bit    CLC2GLS2_LC2G3D2N                at CLC2GLS2 : 2
var volatile bit    CLC2GLS2_LC2G3D1T                at CLC2GLS2 : 1
var volatile bit    CLC2GLS2_LC2G3D1N                at CLC2GLS2 : 0
-- ------------------------------------------------
var volatile byte   CLC2GLS3                         at 0xF1F
var volatile bit    CLC2GLS3_LC2G4D4T                at CLC2GLS3 : 7
var volatile bit    CLC2GLS3_LC2G4D4N                at CLC2GLS3 : 6
var volatile bit    CLC2GLS3_LC2G4D3T                at CLC2GLS3 : 5
var volatile bit    CLC2GLS3_LC2G4D3N                at CLC2GLS3 : 4
var volatile bit    CLC2GLS3_LC2G4D2T                at CLC2GLS3 : 3
var volatile bit    CLC2GLS3_LC2G4D2N                at CLC2GLS3 : 2
var volatile bit    CLC2GLS3_LC2G4D1T                at CLC2GLS3 : 1
var volatile bit    CLC2GLS3_LC2G4D1N                at CLC2GLS3 : 0
-- ------------------------------------------------
var volatile byte   BSR_ICDSHAD                      at 0xFE3
var volatile bit*5  BSR_ICDSHAD_BSR_ICDSHAD          at BSR_ICDSHAD : 0
-- ------------------------------------------------
var volatile byte   STATUS_SHAD                      at 0xFE4
var volatile bit    STATUS_SHAD_Z                    at STATUS_SHAD : 2
var volatile bit    STATUS_SHAD_DC                   at STATUS_SHAD : 1
var volatile bit    STATUS_SHAD_C                    at STATUS_SHAD : 0
-- ------------------------------------------------
var volatile byte   WREG_SHAD                        at 0xFE5
-- ------------------------------------------------
var volatile byte   BSR_SHAD                         at 0xFE6
var volatile bit*5  BSR_SHAD_BSR_SHAD                at BSR_SHAD : 0
-- ------------------------------------------------
var volatile byte   PCLATH_SHAD                      at 0xFE7
var volatile bit*7  PCLATH_SHAD_PCLATH_SHAD          at PCLATH_SHAD : 0
-- ------------------------------------------------
var volatile byte   FSR0L_SHAD                       at 0xFE8
-- ------------------------------------------------
var volatile byte   FSR0H_SHAD                       at 0xFE9
-- ------------------------------------------------
var volatile byte   FSR1L_SHAD                       at 0xFEA
-- ------------------------------------------------
var volatile byte   FSR1H_SHAD                       at 0xFEB
-- ------------------------------------------------
var volatile byte   STKPTR                           at 0xFED
var volatile bit*5  STKPTR_STKPTR                    at STKPTR : 0
-- ------------------------------------------------
var volatile byte   TOSL                             at 0xFEE
-- ------------------------------------------------
var volatile byte   TOSH                             at 0xFEF
var volatile bit*7  TOSH_TOSH                        at TOSH : 0
--
-- ===================================================
--
-- Special (device specific) constants and procedures
--
const ADC_GROUP = ADC_V0
const byte ADC_NTOTAL_CHANNEL = 12
const byte ADC_ADCS_BITCOUNT  = 3
--
const PPS_GROUP  = PPS_0        -- no Peripheral Pin Selection
--
-- - - - - - - - - - - - - - - - - - - - - - - - - - -
-- Change analog I/O pins into digital I/O pins.
procedure analog_off() is
   pragma inline
   ANSELA = 0b0000_0000        -- digital I/O
   ANSELB = 0b0000_0000        -- digital I/O
   ANSELC = 0b0000_0000        -- digital I/O
end procedure
--
-- - - - - - - - - - - - - - - - - - - - - - - - - - -
-- Disable ADC module
procedure adc_off() is
   pragma inline
   ADCON0 = 0b0000_0000         -- disable ADC
   ADCON1 = 0b0000_0000
   ADCON2 = 0b0000_0000
end procedure
--
-- - - - - - - - - - - - - - - - - - - - - - - - - - -
-- Switch analog ports to digital mode (if analog module present).
procedure enable_digital_io() is
   pragma inline
   analog_off()
   adc_off()
end procedure
--
-- ==================================================
--
-- Symbolic Fuse definitions
-- -------------------------
--
-- CONFIG1 (0x8007)
--
pragma fuse_def OSC:0 0x3 {                -- oscillator selection bits
       ECH_NOCLKOUT = 0x3                  -- external clock, high power mode
       ECM_NOCLKOUT = 0x2                  -- external clock, medium power mode
       ECL_NOCLKOUT = 0x1                  -- external clock, low power mode
       INTOSC_NOCLKOUT = 0x0               -- internal oscillator, i/o function on osc1
       }
pragma fuse_def WDT:0 0x18 {               -- watchdog timer enable
       ENABLED = 0x18                      -- enabled
       RUNONLY = 0x10                      -- wdt enabled while running and disabled in sleep
       CONTROL = 0x8                       -- wdt controlled by the swdten bit in the wdtcon register
       DISABLED = 0x0                      -- disabled
       }
pragma fuse_def PWRTE:0 0x20 {             -- power-up timer enable
       DISABLED = 0x20                     -- disabled
       ENABLED = 0x0                       -- enabled
       }
pragma fuse_def MCLR:0 0x40 {              -- mclr pin function select
       EXTERNAL = 0x40                     -- enabled
       INTERNAL = 0x0                      -- disabled
       }
pragma fuse_def CP:0 0x80 {                -- flash program memory code protection
       DISABLED = 0x80                     -- disabled
       ENABLED = 0x0                       -- enabled
       }
pragma fuse_def BROWNOUT:0 0x600 {         -- brown-out reset enable
       ENABLED = 0x600                     -- enabled
       RUNONLY = 0x400                     -- brown-out reset enabled while running and disabled in sleep
       CONTROL = 0x200                     -- brown-out reset controlled by the sboren bit in the borcon register
       DISABLED = 0x0                      -- disabled
       }
pragma fuse_def CLKOUTEN:0 0x800 {         -- clock out enable
       DISABLED = 0x800                    -- disabled
       ENABLED = 0x0                       -- enabled
       }
--
-- CONFIG2 (0x8008)
--
pragma fuse_def WRT:1 0x3 {                -- flash memory self-write protection
       NO_PROTECTION = 0x3                 -- disabled
       R0000_01FF = 0x2                    -- 000h to 1ffh write protected, 200h to 1fffh may be modified by eecon control
       R0000_0FFF = 0x1                    -- 000h to fffh write protected, 1000h to 1fffh may be modified by eecon control
       R0000_1FFF = 0x0                    -- 000h to 1fffh write protected, no addresses may be modified by eecon control
       }
pragma fuse_def STVR:1 0x200 {             -- stack overflow/underflow reset enable
       ENABLED = 0x200                     -- enabled
       DISABLED = 0x0                      -- disabled
       }
pragma fuse_def VOLTAGE:1 0x400 {          -- brown-out reset voltage selection
       MINIMUM = 0x400                     -- brown-out reset voltage (vbor), low trip point selected.
       MAXIMUM = 0x0                       -- brown-out reset voltage (vbor), high trip point selected.
       }
pragma fuse_def LPBOR:1 0x800 {            -- low-power brown out reset
       DISABLED = 0x800                    -- disabled
       ENABLED = 0x0                       -- enabled
       }
pragma fuse_def LVP:1 0x2000 {             -- low-voltage programming enable
       ENABLED = 0x2000                    -- enabled
       DISABLED = 0x0                      -- disabled
       }
--
